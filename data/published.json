[
  {
    "_id": "66f297ad0265dcaccb28d8c9",
    "shader": "#define orbs 20.\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  float stream = stream / 1.2;\n  float dist = length(uv);\n  uv *= k_rotate2d(stream/15.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream/5.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += x1*sin(x2*uv.y-stream);\n    uv.y -= y1*cos(y2*uv.x+stream);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t+stream/10.);\n    float y = radius * cos(t-stream/10.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, pow(volume, .5)*orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          26.54,
          0,
          53.08,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.37,
          0,
          2.74,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.39,
          0,
          2.78,
          false,
          false
        ],
        [
          "radius",
          0,
          4.02,
          0,
          8.04,
          false,
          false
        ],
        [
          "colorShift",
          0,
          5.37,
          0,
          10.74,
          false,
          false
        ],
        [
          "x1",
          0,
          0.57,
          0,
          1.14,
          false,
          false
        ],
        [
          "x2",
          0,
          0.3,
          0,
          0.6,
          false,
          false
        ],
        [
          "y1",
          0,
          0.63,
          0,
          1.26,
          false,
          false
        ],
        [
          "y2",
          0,
          0.53,
          0,
          1.06,
          false,
          false
        ],
        [
          "center",
          0,
          5.39,
          0,
          10.78,
          false,
          false
        ],
        [
          "sides",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.155Z",
    "updated": "2024-09-24T10:42:53.155Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8cc",
    "shader": "#define BALLS 15.\n\nvoid main () {\n  float stream = stream / 3.;\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  uv *= k_rotate2d(stream/-4.);\n  // uv *=outer*sin(inner / 500.*dot(uv, uv) - stream/24.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream/2.75);\n  gl_FragColor = vec4(0);\n  for (float i = 0.; i < BALLS; i++) {\n    uv *= k_rotate2d(stream/-5.*PI/20.);\n    float t = float(i) * PI / BALLS * (2. + 1.);\n    float x = xOuter * sin(xInner * t - stream);\n    float y = yOuter * cos(yOuter * t - stream/1.7);\n    vec2 p = vec2(radius*x, radius*y);\n    p /= pDiv * sin(PI * sin(uv.x/shape - stream/2.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (5. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(pow(volume,.5)*ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          763.232826,
          0,
          2222,
          false
        ],
        [
          "ballSize",
          0,
          90.045199,
          0,
          277.78,
          false
        ],
        [
          "contrast",
          0,
          1.865348,
          0,
          5.04,
          false
        ],
        [
          "radius",
          0,
          4945.528285,
          0,
          15792.5,
          false
        ],
        [
          "shape",
          0,
          114.095092,
          0,
          500,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          16,
          true
        ],
        [
          "center",
          0,
          817.995185,
          0,
          2342,
          false
        ],
        [
          "xOuter",
          0,
          0.323888,
          0,
          2,
          false
        ],
        [
          "xInner",
          0,
          0.198128,
          0,
          2,
          false
        ],
        [
          "yInner",
          0,
          1.408218,
          0,
          2,
          false
        ],
        [
          "yOuter",
          0,
          1.670995,
          0,
          2,
          false
        ],
        [
          "pDiv",
          0,
          22,
          0,
          22,
          false
        ],
        [
          "inner",
          0,
          0.001367,
          0,
          0.1,
          false
        ],
        [
          "outer",
          0,
          17.325566,
          0,
          21,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.157Z",
    "updated": "2024-09-24T10:42:53.157Z",
    "__v": 5,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8cd",
    "shader": "#define orbs 20.\n\n  vec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 hue(vec4 color, float shift) {\n  const vec4 kRGBToYPrime = vec4(0.299, 0.587, 0.114, 0.0);\n  const vec4 kRGBToI = vec4(0.596, -0.275, -0.321, 0.0);\n  const vec4 kRGBToQ = vec4(0.212, -0.523, 0.311, 0.0);\n  const vec4 kYIQToR = vec4(1.0, 0.956, 0.621, 0.0);\n  const vec4 kYIQToG = vec4(1.0, -0.272, -0.647, 0.0);\n  const vec4 kYIQToB = vec4(1.0, -1.107, 1.704, 0.0);\n  float YPrime = dot(color, kRGBToYPrime);\n  float I = dot(color, kRGBToI);\n  float Q = dot(color, kRGBToQ);\n  float hue = atan(Q, I);\n  float chroma = sqrt(I * I + Q * Q);\n  hue += shift;\n  Q = chroma * sin(hue);\n  I = chroma * cos(hue);\n  vec4 yIQ = vec4(YPrime, I, Q, 0.0);\n  color.r = dot(yIQ, kYIQToR);\n  color.g = dot(yIQ, kYIQToG);\n  color.b = dot(yIQ, kYIQToB);\n  return color;\n}\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(2. * PI * (c * t + d));\n}\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv *= abs(uv);\n  uv *= rotate(dist/rotation + stream/50.);\n  //uv /= dot(uv, uv);\n  //uv = kale(uv, vec2(0), sides);\n  //uv *= rotate(rotation*stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream*xSpeed) + cos(uv.y/yDivide-stream/2.);\n    uv.y -= cosMul * cos(uv.x * xMul + stream*ySpeed) - sin(uv.x/xDivide-stream/2.);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t-stream/6.);\n    float y = radius * sin(t+stream/8.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, volume * orbSize, position, 1.-color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.04,
          0,
          0.2,
          false,
          false
        ],
        [
          "bump",
          0,
          0.2,
          0,
          0.5,
          false,
          false
        ],
        [
          "zoom",
          0,
          9.741,
          0,
          111,
          false
        ],
        [
          "contrast",
          0,
          1.21,
          0,
          4,
          false
        ],
        [
          "orbSize",
          0,
          4.346,
          0.01,
          15,
          false
        ],
        [
          "radius",
          0,
          39.769,
          1,
          115,
          false
        ],
        [
          "colorShift",
          0,
          7.65,
          1,
          40,
          false,
          false
        ],
        [
          "sides",
          0,
          4,
          0,
          12,
          true,
          false
        ],
        [
          "rotation",
          0,
          50,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          2.23,
          0,
          5,
          false,
          false
        ],
        [
          "cosMul",
          0,
          1.53,
          0,
          3,
          false,
          false
        ],
        [
          "yMul",
          0,
          0.11,
          0,
          1,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.29,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.006,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          19,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          19,
          0,
          19,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.157Z",
    "updated": "2024-09-24T10:42:53.157Z",
    "__v": 2,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ce",
    "shader": "#define orbs 20.\n\nvec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv *= rotate(dist/rotation + stream/50.);\n  //uv /= dot(uv, uv);\n  uv = kale(uv, vec2(0), sides);\n  uv *= rotate(stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream*xSpeed) + cos(uv.y/yDivide-stream/2.);\n    uv.y -= cosMul * cos(uv.x * xMul + stream*ySpeed) - sin(uv.x/xDivide-stream/2.);\n    float t = i * PI / orbs * 2.;\n    float x = radius * cos(t-stream/11.);\n    float y = radius * sin(t+stream/11.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, pow(volume, .8) * orbSize, position, 1.-color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.1,
          0,
          0.2,
          false,
          false
        ],
        [
          "bump",
          0,
          0.5,
          0,
          0.5,
          false,
          false
        ],
        [
          "zoom",
          0,
          40.43,
          0,
          111,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.202,
          0,
          4,
          false
        ],
        [
          "orbSize",
          0,
          5,
          0.01,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          14.079999999999998,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          7.65,
          1,
          40,
          false,
          false
        ],
        [
          "sides",
          0,
          1,
          0,
          12,
          true,
          false
        ],
        [
          "rotation",
          0,
          50,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "cosMul",
          0,
          3,
          0,
          3,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          1,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.4,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -22,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          -2,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.006,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          5.89,
          1,
          12,
          false,
          false
        ],
        [
          "xDivide",
          0,
          5.89,
          0,
          19,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.157Z",
    "updated": "2024-09-24T10:42:53.157Z",
    "__v": 2,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8cf",
    "shader": "#define orbs 20.\n\n  vec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(2. * PI * (c * t + d));\n}\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvec2 swap (vec2 uv, vec2 uv2, bool v, bool vT, float vTP) {\n  return vT ? (v ? mix(uv, uv2, vTP) : mix(uv2, uv, vTP)) : (v ? uv2 : uv);\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y; \n  uv *= zoom;\n\n  float stream = stream / .532;\n  float dist = length(uv);\n  vec2 warped = uv / dot(uv, uv);\n  uv = swap(uv, warped, warp, warpTween, warpTweenProgress);\n  uv *= rotate(stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sin((i+1.)*uv.y/div - stream/2.);\n    uv.y += cos((i+1.)*uv.x/div2 + stream/2.);\n    float t = i * PI / orbs * 20.;\n    float x = radius * sin(t);\n    float y = radius * cos(t);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, pow(volume, .79)*orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.03,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.44,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          0.1,
          0,
          12,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.55,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.79,
          0.01,
          2,
          false,
          false
        ],
        [
          "radius",
          0,
          1,
          1,
          14,
          false,
          false
        ],
        [
          "colorShift",
          0,
          10.95,
          3,
          16,
          false,
          false
        ],
        [
          "div",
          0,
          15.427,
          0,
          100,
          false,
          false
        ],
        [
          "div2",
          0,
          32.974,
          0,
          200,
          false,
          false
        ],
        [
          "warp",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ],
      [
        [
          "speed",
          0,
          0.03,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.44,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          10.56,
          0,
          112,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.55,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.94,
          0.01,
          2,
          false,
          false
        ],
        [
          "radius",
          0,
          1,
          1,
          14,
          false,
          false
        ],
        [
          "colorShift",
          0,
          8.11,
          3,
          16,
          false,
          false
        ],
        [
          "div",
          0,
          90.8,
          0,
          100,
          false,
          false
        ],
        [
          "div2",
          0,
          16.276,
          0,
          200,
          false,
          false
        ],
        [
          "warp",
          1,
          false,
          null,
          null,
          false,
          false
        ]
      ],
      [
        [
          "speed",
          0,
          0.03,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.68,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          0.43,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.24,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.17,
          0.01,
          2,
          false,
          false
        ],
        [
          "radius",
          0,
          14,
          1,
          14,
          false,
          false
        ],
        [
          "colorShift",
          0,
          10.95,
          3,
          16,
          false,
          false
        ],
        [
          "div",
          0,
          96.668,
          0,
          100,
          false,
          false
        ],
        [
          "div2",
          0,
          66.266,
          0,
          200,
          false,
          false
        ],
        [
          "warp",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.157Z",
    "updated": "2024-09-24T10:42:53.157Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d0",
    "shader": "#define BALLS 20\n  \nfloat stepping(float t) {\n  if (t < 0.) return -1. + pow(1. + t, 2.);\n  else return 1. - pow(1. - t, 2.);\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv = normalize((uv) + sin(abs(1./length(uv)*20.*uv)-stream/2.)) * length(uv);\n//  uv /= .1*tan(.1*dot(1.1*tan(uv), 5.*atan(uv)) - stream/5.);\n  uv += dot(sin(uv+stream), cos(uv+stream));\n // uv += sin(.01*dot(tan(uv+stream/20.), tan(uv-stream/20.)) - stream/5.);\n  uv *= rotate2d(rotation + stream/15.);\n  for (int i = 0; i < BALLS; i++) {\n    float dist = length(uv);\n\t\tuv.y += yOuter*sin(uv.y/yDivider + stream/2.) / 1.*sin(uv.x/1. - stream/1.);\n    uv.x -= xOuter*sin(uv.x/xDivider - stream/5.) / 1.*sin(uv.x/1.1 + stream/1.);\n    float t = float(i) * PI / float(BALLS) * (5. + 1.);// + stream/5000.;\n    float _multiplier = dist*multiplier * sin(stream + uv.x);\n    vec2 p = vec2(radius*-1.*tan(t*multiplier), 1.*radius*sin(t*multiplier));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 10. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(pow(volume, .8) * ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.04,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.42,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          25.38,
          0,
          30,
          false,
          false
        ],
        [
          "yDivider",
          0,
          27.34,
          0.1,
          1000,
          false,
          false
        ],
        [
          "xDivider",
          0,
          10.17,
          0.1,
          1000,
          false,
          false
        ],
        [
          "multiplier",
          0,
          287.12,
          0.1,
          1101,
          false,
          false
        ],
        [
          "ballSize",
          0,
          1.72,
          0,
          2,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.41,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          11,
          0,
          11,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0.3,
          0,
          1,
          false,
          false
        ],
        [
          "xOuter",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "rotation",
          0,
          5,
          0,
          5,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d1",
    "shader": "#define orbs 20.\n\nvec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 hue(vec4 color, float shift) {\n  const vec4 kRGBToYPrime = vec4(0.299, 0.587, 0.114, 0.0);\n  const vec4 kRGBToI = vec4(0.596, -0.275, -0.321, 0.0);\n  const vec4 kRGBToQ = vec4(0.212, -0.523, 0.311, 0.0);\n  const vec4 kYIQToR = vec4(1.0, 0.956, 0.621, 0.0);\n  const vec4 kYIQToG = vec4(1.0, -0.272, -0.647, 0.0);\n  const vec4 kYIQToB = vec4(1.0, -1.107, 1.704, 0.0);\n  float YPrime = dot(color, kRGBToYPrime);\n  float I = dot(color, kRGBToI);\n  float Q = dot(color, kRGBToQ);\n  float hue = atan(Q, I);\n  float chroma = sqrt(I * I + Q * Q);\n  hue += shift;\n  Q = chroma * sin(hue);\n  I = chroma * cos(hue);\n  vec4 yIQ = vec4(YPrime, I, Q, 0.0);\n  color.r = dot(yIQ, kYIQToR);\n  color.g = dot(yIQ, kYIQToG);\n  color.b = dot(yIQ, kYIQToB);\n  return color;\n}\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(2. * PI * (c * t + d));\n}\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv *= rotate(dist/rotation + stream/20.);\n  //uv /= dot(uv, uv);\n  uv = kale(uv, vec2(0), sides);\n  //uv *= rotate(rotation*stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream*xSpeed) + cos(uv.y/yDivide-stream/1.);\n    uv.y -= cosMul * cos(uv.x * xMul + stream*ySpeed) - sin(uv.x/xDivide-stream/1.7);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t-stream/11.);\n    float y = radius * sin(t+stream/11.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, volume * orbSize, position, 1.-color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.06,
          0,
          0.2,
          false,
          false
        ],
        [
          "bump",
          0,
          0.37,
          0,
          0.5,
          false,
          false
        ],
        [
          "zoom",
          0,
          33.367,
          0,
          111,
          false
        ],
        [
          "contrast",
          0,
          1.242,
          0,
          4,
          false
        ],
        [
          "orbSize",
          0,
          1.418,
          0.01,
          5,
          false
        ],
        [
          "radius",
          0,
          8.08,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          7.65,
          1,
          40,
          false,
          false
        ],
        [
          "sides",
          0,
          1,
          0,
          12,
          true,
          false
        ],
        [
          "rotation",
          0,
          12.74,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          15,
          false,
          false
        ],
        [
          "cosMul",
          0,
          2.22,
          0,
          3,
          false,
          false
        ],
        [
          "yMul",
          0,
          0.25,
          0,
          1,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.42,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          0,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.006,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          2.04,
          1,
          12,
          false,
          false
        ],
        [
          "xDivide",
          0,
          16.34,
          0,
          19,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d2",
    "shader": "#define orbs 20.\n\n  vec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 hue(vec4 color, float shift) {\n  const vec4 kRGBToYPrime = vec4(0.299, 0.587, 0.114, 0.0);\n  const vec4 kRGBToI = vec4(0.596, -0.275, -0.321, 0.0);\n  const vec4 kRGBToQ = vec4(0.212, -0.523, 0.311, 0.0);\n  const vec4 kYIQToR = vec4(1.0, 0.956, 0.621, 0.0);\n  const vec4 kYIQToG = vec4(1.0, -0.272, -0.647, 0.0);\n  const vec4 kYIQToB = vec4(1.0, -1.107, 1.704, 0.0);\n  float YPrime = dot(color, kRGBToYPrime);\n  float I = dot(color, kRGBToI);\n  float Q = dot(color, kRGBToQ);\n  float hue = atan(Q, I);\n  float chroma = sqrt(I * I + Q * Q);\n  hue += shift;\n  Q = chroma * sin(hue);\n  I = chroma * cos(hue);\n  vec4 yIQ = vec4(YPrime, I, Q, 0.0);\n  color.r = dot(yIQ, kYIQToR);\n  color.g = dot(yIQ, kYIQToG);\n  color.b = dot(yIQ, kYIQToB);\n  return color;\n}\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(2. * PI * (c * t + d));\n}\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  //uv *= rotate(rotation*stream/5.);\n  //uv /= dot(uv, uv);\n  //uv = kale(uv, vec2(0), sides);\n  uv *= rotate(stream/40.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream*xSpeed) + cos(uv.y/yDivide-stream/4.);\n    uv.y -= cosMul * cos(uv.x * xMul - stream*ySpeed) - sin(uv.x/xDivide-stream/7.);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t-stream/4.);\n    float y = radius * sin(t+stream/4.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, pow(volume, .8)*orbSize, position, 1.-color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.1,
          0,
          0.2,
          false,
          false
        ],
        [
          "bump",
          0,
          0.5,
          0,
          0.5,
          false,
          false
        ],
        [
          "zoom",
          0,
          47.434,
          0,
          111,
          false
        ],
        [
          "contrast",
          0,
          1.167,
          0,
          2,
          false
        ],
        [
          "orbSize",
          0,
          2.594,
          0.01,
          6,
          false
        ],
        [
          "radius",
          0,
          10.291,
          1,
          115,
          false
        ],
        [
          "colorShift",
          0,
          7.12,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          4,
          0,
          12,
          true,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          2,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          0.94,
          0,
          3,
          false,
          false
        ],
        [
          "yMul",
          0,
          0.14,
          0,
          1,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.05,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -0.5,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          0.5,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.006,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.2,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          2.08,
          0,
          19,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d3",
    "shader": "#define orbs 20.\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y; \n  uv *= zoom;\n  uv *= k_rotate2d(stream/20.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += radius * sin((i+1.)*uv.y/yDiv - stream);\n    uv.y += radius * cos((i+1.)*uv.x/xDiv + stream);\n    float t = i * PI / orbs;\n    vec2 position = vec2(0, 0);\n    vec3 color = cos(stream/2.+vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / 16.)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, volume * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.04,
          0,
          1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.44,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          3.707,
          0,
          20,
          false
        ],
        [
          "contrast",
          0,
          1.21,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.407,
          0.01,
          2,
          false
        ],
        [
          "colorShift",
          0,
          15,
          3,
          15,
          false
        ],
        [
          "warp",
          1,
          true
        ],
        [
          "radius",
          0,
          0.279,
          0,
          2,
          false
        ],
        [
          "yDiv",
          0,
          0.754,
          0,
          10,
          false
        ],
        [
          "xDiv",
          0,
          2.235,
          0,
          10,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d4",
    "shader": "precision highp float;\n\n\n\nmat2 rotate2d(float _angle) {\n  return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv *= rotate2d(1. + stream/35.);\n  vec2 p = shape2 / abs(vec2(.5 / shape));\n  p /= abs(tan(sin(xShape * uv.x-stream) * (cos(yShape * uv.y - stream))));\n  vec3 col = cos(vec3(0, 2, 0) * PI * 2. / 3. + PI * (time / 3.23 + colorShape * uv.x)) * 0.5 + 0.5;\n  float x = sin(uv.x);\n  float y = cos(uv.y - cos(uv.y + uv.x));\n  gl_FragColor += vec4(length(vec2(x, y)) * (pow(1./volume, -.6)) * ballSize / length(uv - p * 0.9) * col, contrast);\n  gl_FragColor.xyz = pow(vec3(1.25) - (gl_FragColor.xyz), vec3(contrast));\n  gl_FragColor.w = 1.0;\n  gl_FragColor.b *= .42;\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.1,
          0,
          0.3,
          false,
          false
        ],
        [
          "bump",
          0,
          0.5,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          1.443,
          0,
          4,
          false
        ],
        [
          "xShape",
          0,
          7.238,
          0,
          11,
          false
        ],
        [
          "yShape",
          0,
          7.275,
          0,
          11,
          false
        ],
        [
          "colorShape",
          0,
          11,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.376,
          0,
          1,
          false,
          false
        ],
        [
          "ballSize",
          0,
          3.948,
          0,
          4,
          false
        ],
        [
          "shape",
          0,
          1.34,
          0,
          3,
          false
        ],
        [
          "shape2",
          0,
          0.284,
          0,
          2,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d5",
    "shader": "#define orbs 30.\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y; \n  uv *= zoom;\n  uv *= k_rotate2d(stream / 20.);\n  uv = uv - cos( .0005 * dot(uv, uv)) * sin(.01 * dot(uv, uv)+stream/12.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x -= cos((i+1.)*uv.y/div - stream);\n    uv.y += cos((i+1.)*uv.x/div2 - stream/2.5);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t - stream/2.);\n    float y = radius * cos(t - stream/6.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(uv.x/200. + uv.y/25500.*stream + vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, pow(volume, .7) * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.15,
          0,
          1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.37,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          11.15,
          0,
          151,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.094,
          0,
          2,
          false
        ],
        [
          "orbSize",
          0,
          1.055,
          0.01,
          2,
          false
        ],
        [
          "radius",
          0,
          12.89,
          0,
          14,
          false,
          false
        ],
        [
          "colorShift",
          0,
          10.54,
          3,
          33,
          false,
          false
        ],
        [
          "div",
          0,
          40,
          10,
          40,
          false,
          false
        ],
        [
          "div2",
          0,
          40,
          10,
          40,
          false,
          false
        ],
        [
          "warp",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 2,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d6",
    "shader": "#define orbs 20.\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nvoid main () {\n  float stream = stream / 2.;\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y; \n  uv *= zoom;\n\tuv.x = abs(uv.x);\n  uv = uv * cos( .0001 * dot(uv, uv) - stream/5.) + uv.x / 1111.;// * 20.*sin(9.1 * dot(uv, uv)-stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.y -= cos((i+1.)*uv.y/div - stream);\n    uv.x += cos((i+1.)*uv.y/div2 - stream/1.5);\n    float t = i * PI / orbs;\n    float x = radius * tan(t + stream/11.) * sin(t-stream) * cos(t+stream/2.114) ;\n    float y = radius * cos(t - stream/2.2) * cos(t-stream) * tan(t+stream/3.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, volume * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.03,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.45,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          52.612,
          0,
          151,
          false
        ],
        [
          "contrast",
          0,
          0.931,
          0,
          2,
          false
        ],
        [
          "orbSize",
          0,
          0.617,
          0.01,
          12,
          false
        ],
        [
          "radius",
          0,
          22.221,
          0,
          24,
          false
        ],
        [
          "colorShift",
          0,
          11.52,
          3,
          33,
          false,
          false
        ],
        [
          "div",
          0,
          17.328,
          10,
          40,
          false,
          false
        ],
        [
          "div2",
          0,
          14.483,
          10,
          40,
          false,
          false
        ],
        [
          "warp",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 2,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d7",
    "shader": "#define orbs 20.\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y; \n  uv *= zoom;\n\n // uv = uv * cos( .0001 * dot(uv, uv) - stream/18.) + uv.x / 1111. * sin(.1 * dot(uv, uv)-stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.y -= cos((i+1.)*uv.y/div - stream);\n    uv.x += cos((i+1.)*uv.y/div2 - stream/1.5);\n    float t = i * PI / orbs;\n    float x = radius * tan(t + stream/2.);\n    float y = radius * cos(t - stream/2.2) * sin(t-stream/3.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, pow(volume, .8) * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.03,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.5,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          24.95,
          0,
          151,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.902,
          0,
          2,
          false
        ],
        [
          "orbSize",
          0,
          0.682,
          0.01,
          2,
          false
        ],
        [
          "radius",
          0,
          8.159,
          0,
          20,
          false
        ],
        [
          "colorShift",
          0,
          12.71,
          3,
          33,
          false,
          false
        ],
        [
          "div",
          0,
          10,
          1,
          10,
          false,
          false
        ],
        [
          "div2",
          0,
          10,
          1,
          10,
          false,
          false
        ],
        [
          "warp",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d8",
    "shader": "#define BALLS 20.\n\nvoid main() {\n  float stream = stream / 2.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv = normalize(uv) / length(uv);\n  float dist = length(uv);\n    uv *= k_rotate2d(stream/2.);\n  uv = sin(stream * 1. + (uv));\n  //  uv += tan(log(uv) + stream/1.);\n  uv *= sin((dot(uv, uv)) - stream / .8);\n  uv *= k_rotate2d(rotation * dist + stream / 1.7);\n  for (float i = 0.; i < BALLS; i++) {\n    // uv.x /= cos(log(abs(uv.x*.1)-float(i+2.)));\n    float t = stream / 7. + float(i) * PI / BALLS;\n    vec2 p = vec2(radius * tan(t), radius * sin(t));\n    //p *= radius * tan(float(i) - PI);\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + 3.141925 * (stream / 2. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(2.7/dist * pow(volume, .9)*ballSize / length(uv + p) * col, 1.0);\n  }\n  gl_FragColor.xyz = pow(dist, .6) * pow((gl_FragColor.xyz), vec3(contrast)) + .2 * col;\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.559,
          0,
          1.58,
          false
        ],
        [
          "contrast",
          0,
          2.733,
          0,
          6.06,
          false
        ],
        [
          "ballSize",
          0,
          0.034,
          0,
          0.1,
          false
        ],
        [
          "radius",
          0,
          0.53,
          0,
          2.66,
          false
        ],
        [
          "col",
          3,
          [
            0.37254901960784315,
            0.6509803921568628,
            0.9490196078431372
          ],
          null,
          null,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.225,
          0,
          3.66,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8d9",
    "shader": "#define BALLS 20\n\nvoid main() {\n  float stream = stream / 3.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv /= dot(uv, uv);\n  float dist = length(uv);\n  // uv += sin(stream*1.+(1.-log(sin(uv))));\n  uv *= k_rotate2d(stream/3.);\n  // uv += sin(dotMultiplier * (cos(dot(abs(uv), log(abs(uv)))) - stream / 11.));\n  // uv *= k_rotate2d(rotation*dist+stream/1.);\n  for (int i = 5; i < BALLS; i++) {\n    // uv.x -= .01*cos(log(abs(uv.x*.1)-float(i+1))-stream);\n    float t = float(i) * PI / float(BALLS);\n    vec2 p = radius * vec2(tanMul * tan(t - stream/2.), sinMul * sin(t + stream/4.));\n    p += radius * tan(stream + float(i) - PI) * sin(t - stream);\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + 3.141925 * (stream / 55. + float(i) / 10.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(volume * ballSize / length(uv + p) * col, 1.0);\n  }\n  gl_FragColor.xyz = pow(dist, .5) * pow((gl_FragColor.xyz), vec3(contrast)) + .2 * col;\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.153,
          0,
          1.556,
          false
        ],
        [
          "contrast",
          0,
          1.831,
          0,
          10,
          false
        ],
        [
          "ballSize",
          0,
          0.507,
          0,
          2,
          false
        ],
        [
          "radius",
          0,
          6.699,
          0,
          9,
          false
        ],
        [
          "col",
          3,
          [
            0.37254901960784315,
            0.6509803921568628,
            0.9490196078431372
          ],
          null,
          null,
          false,
          false
        ],
        [
          "rotation",
          0,
          2.17,
          0,
          4.34,
          false,
          false
        ],
        [
          "dotMultiplier",
          0,
          5,
          0,
          10,
          false,
          false
        ],
        [
          "tanMul",
          0,
          0.9,
          0,
          1.8,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          0,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.158Z",
    "updated": "2024-09-24T10:42:53.158Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8da",
    "shader": "#define BALLS 20\n\nvoid main() {\n  float stream = stream / .45;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  for (int i = 0; i < BALLS; i++) {\n    uv.y -= float(i) / 15. * cos(uv.y / yDivider + stream / 10.) + a * sin(uv.x / 100. - stream / 12.);\n    uv.x += float(i) / 8. * sin(uv.x / xDivider - stream / 15.) - b * cos(uv.y / 100. + stream / 10.);\n    float t = 1.1 * float(i) * PI / float(BALLS) * (5. + 1.);\n    float _multiplier = dist / multiplier * sin(uv.x - stream / 1.);\n    vec2 p = radius * vec2(-11. * tan(t + stream/10.), 1. * sin(t / multiplier));\n    p /= sin(PI * sin(uv.x / 100.) * cos(uv.y / 40.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (5. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(float(i) / 40. * ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          239.782,
          0,
          355.48,
          false,
          false
        ],
        [
          "yDivider",
          0,
          23.215,
          0,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          520.181,
          0,
          737.44,
          false,
          false
        ],
        [
          "multiplier",
          0,
          1.895,
          0,
          2.582,
          false,
          false
        ],
        [
          "ballSize",
          0,
          50.485,
          0,
          119.2,
          false,
          false
        ],
        [
          "contrast",
          0,
          3.054,
          0,
          6.06,
          false,
          false
        ],
        [
          "radius",
          0,
          23.28,
          0,
          73.78,
          false,
          false
        ],
        [
          "a",
          0,
          1.91,
          0,
          12,
          false,
          false
        ],
        [
          "b",
          0,
          8.04,
          0,
          12,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ca",
    "shader": "#define orbs 15.\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  uv *= k_rotate2d(stream/9.);\n  float dist = length(uv);\n  uv = k_kale(uv, vec2(center*dist), sides);\n  for (float i = 0.; i < orbs; i++) {\n    float t = i / PI / orbs * 8.;\n    float x = t * radius * cos(dist*t-stream/1.5)*1.-sin(dist+stream);\n    float y = 0.;\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, volume * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          4.34,
          0,
          8.68,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.344,
          0,
          2.26,
          false
        ],
        [
          "orbSize",
          0,
          0.132,
          0,
          0.18,
          false
        ],
        [
          "radius",
          0,
          2.239,
          0,
          2.9,
          false
        ],
        [
          "colorShift",
          0,
          4.5,
          0,
          9,
          false,
          false
        ],
        [
          "center",
          0,
          0.94,
          0,
          1.88,
          false,
          false
        ],
        [
          "sides",
          0,
          8,
          0,
          16,
          false,
          false
        ],
        [
          "shape",
          0,
          0.36,
          0,
          0.72,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.156Z",
    "updated": "2024-09-24T10:42:53.156Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8dc",
    "shader": "#define BALLS 20\n\nvoid main() {\n  float stream = stream / .6;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv = normalize(uv) * length(abs(uv));\n  uv = k_swap(uv, abs(uv), mirror, mirrorTween, mirrorTweenProgress);\n  float dist = length(uv);\n  for (int i = 0; i < BALLS; i++) {\n    uv.y += .2 * float(i) * cos(uv.y / yDivider + stream / 11.) + sin(uv.x / 21. - stream / 12.);\n    uv.x += .2 * float(i) * sin(uv.x / xDivider - stream / 11.) - sin(uv.y / 20. + stream / 12.);\n    float t = .01 * dist * float(i) * PI / float(BALLS) * (5. + 1.);\n    float _multiplier = dist / multiplier * sin(uv.x - stream / 1.);\n    vec2 p = radius * vec2(-1. * cos(t), 1. * sin(t / multiplier));\n    p /= sin(PI * sin(uv.x / 10.) * cos(uv.y / 11.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 5. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(float(i) *volume* ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          50.47,
          0,
          100.94,
          false,
          false
        ],
        [
          "yDivider",
          0,
          397.41,
          0,
          794.82,
          false,
          false
        ],
        [
          "xDivider",
          0,
          815.27,
          0,
          1630.54,
          false,
          false
        ],
        [
          "multiplier",
          0,
          4.29,
          0,
          8.58,
          false,
          false
        ],
        [
          "ballSize",
          0,
          0.22,
          0,
          0.44,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.96,
          0,
          3.92,
          false,
          false
        ],
        [
          "radius",
          0,
          9.33,
          0,
          18.66,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          50.47,
          0,
          100.94,
          false,
          false
        ],
        [
          "yDivider",
          0,
          397.41,
          0,
          794.82,
          false,
          false
        ],
        [
          "xDivider",
          0,
          815.27,
          0,
          1630.54,
          false,
          false
        ],
        [
          "multiplier",
          0,
          4.29,
          0,
          8.58,
          false,
          false
        ],
        [
          "ballSize",
          0,
          0.22,
          0,
          0.44,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.96,
          0,
          3.92,
          false,
          false
        ],
        [
          "radius",
          0,
          9.33,
          0,
          18.66,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8de",
    "shader": "#define orbs 20.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n\n  uv *= k_rotate2d(stream / 20.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream / 5.);\n  for (float i = 0.; i < 20.; i++) {\n    uv.x += x1 * sin(x2 * uv.y - stream);\n    uv.y -= y1 * cos(y2 * uv.x + stream);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t + stream / 10.);\n    float y = radius * cos(t - stream / 30.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, volume * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          21.09,
          0,
          42.18,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.37,
          0,
          2.74,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.39,
          0,
          2.78,
          false,
          false
        ],
        [
          "radius",
          0,
          4.02,
          0,
          8.04,
          false,
          false
        ],
        [
          "colorShift",
          0,
          5.37,
          0,
          10.74,
          false,
          false
        ],
        [
          "x1",
          0,
          0.57,
          0,
          1.14,
          false,
          false
        ],
        [
          "x2",
          0,
          0.3,
          0,
          0.6,
          false,
          false
        ],
        [
          "y1",
          0,
          0.63,
          0,
          1.26,
          false,
          false
        ],
        [
          "y2",
          0,
          0.53,
          0,
          1.06,
          false,
          false
        ],
        [
          "center",
          0,
          6.97,
          0,
          13.94,
          false,
          false
        ],
        [
          "sides",
          0,
          6,
          0,
          12,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8cb",
    "shader": "#define BALLS 5\n\nvec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 hue(vec4 color, float shift) {\n  const vec4 kRGBToYPrime = vec4(0.299, 0.587, 0.114, 0.0);\n  const vec4 kRGBToI = vec4(0.596, -0.275, -0.321, 0.0);\n  const vec4 kRGBToQ = vec4(0.212, -0.523, 0.311, 0.0);\n  const vec4 kYIQToR = vec4(1.0, 0.956, 0.621, 0.0);\n  const vec4 kYIQToG = vec4(1.0, -0.272, -0.647, 0.0);\n  const vec4 kYIQToB = vec4(1.0, -1.107, 1.704, 0.0);\n  float YPrime = dot(color, kRGBToYPrime);\n  float I = dot(color, kRGBToI);\n  float Q = dot(color, kRGBToQ);\n  float hue = atan(Q, I);\n  float chroma = sqrt(I * I + Q * Q);\n  hue += shift;\n  Q = chroma * sin(hue);\n  I = chroma * cos(hue);\n  vec4 yIQ = vec4(YPrime, I, Q, 0.0);\n  color.r = dot(yIQ, kYIQToR);\n  color.g = dot(yIQ, kYIQToG);\n  color.b = dot(yIQ, kYIQToB);\n  return color;\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  gl_FragColor = vec4(0);\n  uv = normalize(uv) * length(uv);\n  uv = zoom * (uv);//(1.+ProgressBasis/2.);\n  if (invertTween) {\n  \tif (invert) {\n     \tuv = mix(uv, abs(uv), invertTweenProgress); \n    } else {\n      uv = mix(abs(uv), uv, invertTweenProgress); \n    }\n  } else if (invert) {\n   \tuv = abs(uv); \n  }\n  float dist = distance(uv, vec2(0));\n  float thing = .005*sin(shapeMultiplier*dot(uv, uv)/dist - stream/4.);\n//  vec2 _kale = kale(uv, vec2(0.), sides);\n  uv *= rotate2d(rotation * (dist - stream/1.));\n  float _grid = (cos(uv.x * xMultiplier - stream/4.) + sin(uv.y * yMultiplier + stream/10.));\n  uv /= colorSpread * thing * _grid;\n  uv*=dist;\n  uv.x += uv.y;// / cos(uv.x);//sin(uv.y+stream/.1);\n  for (int i = 0; i < BALLS; i++) {\n    uv *= rotate2d(dist*float(i));//-stream/10.);\n    float t = float(i) * PI / float(BALLS);// - stream/4.;\n    vec2 p = radius * vec2(radius*tan(t), radius*cos(t));\n    //p += log(sin(stream/3. + float(i) * PI));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 20. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(volume * ballSize  / length(uv + p * colorMultiplier) * col, 1.0);\n  }\n  gl_FragColor.xyz = glow * brightness * pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n gl_FragColor = hue(gl_FragColor, stream/50.);\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.062,
          0,
          0.124,
          false,
          false
        ],
        [
          "shapeMultiplier",
          0,
          203.13,
          0,
          406.26,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.05,
          0,
          0.1,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          59.27,
          0,
          118.54,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          88,
          0,
          176,
          false,
          false
        ],
        [
          "colorSpread",
          0,
          0.001,
          0,
          0.002,
          false,
          false
        ],
        [
          "colorMultiplier",
          0,
          0.81,
          0,
          1.62,
          false,
          false
        ],
        [
          "invert",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "brightness",
          0,
          3.86,
          0,
          7.72,
          false,
          false
        ],
        [
          "ballSize",
          0,
          36.72,
          0,
          73.44,
          false,
          false
        ],
        [
          "glow",
          0,
          1.22,
          0,
          2.44,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.72,
          0,
          5.44,
          false,
          false
        ],
        [
          "radius",
          0,
          16.24,
          0,
          32.48,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.02,
          0,
          0.124,
          false
        ],
        [
          "shapeMultiplier",
          0,
          203.13,
          0,
          406.26,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.05,
          0,
          0.1,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          59.27,
          0,
          118.54,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          88,
          0,
          176,
          false,
          false
        ],
        [
          "colorSpread",
          0,
          0.001,
          0,
          0.002,
          false,
          false
        ],
        [
          "colorMultiplier",
          0,
          0.81,
          0,
          1.62,
          false,
          false
        ],
        [
          "invert",
          1,
          false
        ],
        [
          "brightness",
          0,
          3.86,
          0,
          7.72,
          false,
          false
        ],
        [
          "ballSize",
          0,
          36.72,
          0,
          73.44,
          false,
          false
        ],
        [
          "glow",
          0,
          1.22,
          0,
          2.44,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.72,
          0,
          5.44,
          false,
          false
        ],
        [
          "radius",
          0,
          22.046,
          0,
          32.48,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.157Z",
    "updated": "2024-09-24T10:42:53.157Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8df",
    "shader": "#define BALLS 20\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float stream = stream / .47;\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  uv *= cos(.00005 * dot(uv, uv) - stream / 20.);\n  uv *= k_rotate2d(stream / 120.);\n  for (int i = 0; i < BALLS; i++) {\n    uv.y -= float(i) / yDivide * sin(uv.y) - cos(uv.y / yDivider + stream / 8.);\n    uv.x += float(i) / xDivide * sin(uv.x / xDivider + stream / 14.) * .251 * cos(uv.y / yShape + stream / 6.);\n    float t = 5.1 * float(i) * PI / float(BALLS) * (2. + 1.) + stream / 100.;\n    float x = -1. * tan(t + stream / 1000.);\n    float y = sin(t / multiplier); // + stream/401.);\n    vec2 p = radius * vec2(x, y);\n    p /= sin(PI * sin(uv.x / shape + stream / 10.)); //+cos(uv.x/300.-stream/1.));\n    vec3 col = cos(stream / 10. + vec3(0, 1, -1) * PI * 2. / 3. + PI * (5. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(float(i) / 40. * pow(volume, 1.16)*ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          90.275,
          0,
          294.9,
          false,
          false
        ],
        [
          "yDivider",
          0,
          18.646,
          0,
          49.4,
          false,
          false
        ],
        [
          "xDivider",
          0,
          9.294,
          0,
          14.94,
          false,
          false
        ],
        [
          "multiplier",
          0,
          1.219,
          0,
          1.73,
          false,
          false
        ],
        [
          "ballSize",
          0,
          34.82,
          0,
          69.64,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.8,
          0,
          3.6,
          false,
          false
        ],
        [
          "radius",
          0,
          76.67,
          0,
          153.34,
          false,
          false
        ],
        [
          "rotation",
          0,
          14.858,
          0,
          15.2,
          false,
          false
        ],
        [
          "yDivide",
          0,
          307.888,
          0,
          703.66,
          false,
          false
        ],
        [
          "xDivide",
          0,
          0.408,
          0,
          0.64,
          false,
          false
        ],
        [
          "yShape",
          0,
          200,
          0,
          200,
          false,
          false
        ],
        [
          "shape",
          0,
          14.966,
          0,
          33.76,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e0",
    "shader": "#define orbs 20.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n\n  uv *= k_rotate2d(stream / 6.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream / 5.);\n  for (float i = 0.; i < 20.; i++) {\n    uv.x += x1 * sin(x2 * uv.y - stream);\n    uv.y -= y1 * cos(y2 * uv.x + stream);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t + stream / 10.);\n    float y = radius * cos(t - stream / 30.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, pow(volume, 1.) * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          12.35,
          0,
          24.7,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          2.38,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.64,
          0,
          1.28,
          false,
          false
        ],
        [
          "radius",
          0,
          4.02,
          0,
          8.04,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.41,
          0,
          8.82,
          false,
          false
        ],
        [
          "x1",
          0,
          0.1,
          0,
          0.2,
          false,
          false
        ],
        [
          "x2",
          0,
          0.91,
          0,
          1.82,
          false,
          false
        ],
        [
          "y1",
          0,
          0.37,
          0,
          0.74,
          false,
          false
        ],
        [
          "y2",
          0,
          1.86,
          0,
          3.72,
          false,
          false
        ],
        [
          "center",
          0,
          6.97,
          0,
          13.94,
          false,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          6,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          24.7,
          0,
          24.7,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          2.38,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.204,
          0,
          1.28,
          false,
          false
        ],
        [
          "radius",
          0,
          8.04,
          0,
          8.04,
          false,
          false
        ],
        [
          "colorShift",
          0,
          2.6,
          0,
          8.82,
          false,
          false
        ],
        [
          "x1",
          0,
          0.1,
          0,
          0.2,
          false,
          false
        ],
        [
          "x2",
          0,
          0,
          0,
          1.82,
          false,
          false
        ],
        [
          "y1",
          0,
          0.74,
          0,
          0.74,
          false,
          false
        ],
        [
          "y2",
          0,
          0.394,
          0,
          3.72,
          false,
          false
        ],
        [
          "center",
          0,
          13.273,
          0,
          13.94,
          false,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          3,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          11.101,
          0,
          24.7,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          2.38,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.003,
          0,
          1.28,
          false,
          false
        ],
        [
          "radius",
          0,
          8.04,
          0,
          8.04,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.625,
          0,
          8.82,
          false,
          false
        ],
        [
          "x1",
          0,
          0.053,
          0,
          0.2,
          false,
          false
        ],
        [
          "x2",
          0,
          1.82,
          0,
          1.82,
          false,
          false
        ],
        [
          "y1",
          0,
          0.74,
          0,
          0.74,
          false,
          false
        ],
        [
          "y2",
          0,
          3.72,
          0,
          3.72,
          false,
          false
        ],
        [
          "center",
          0,
          3.859,
          0,
          13.94,
          false,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          3,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e1",
    "shader": "#define BALLS 20\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  uv *= k_rotate2d(stream / 10.);\n  uv = k_swap(uv, abs(uv), mirror, mirrorTween, mirrorTweenProgress);\n  uv = k_swap(uv, uv * sin(.0001 * dot(uv, uv) + stream/5.), dotted, dottedTween, dottedTweenProgress);\n  for (int i = 0; i < BALLS; i++) {\n    uv.y -= float(i) / yDivide * (uv.x) - cos(uv.y / yDivider + stream / 2.);\n    uv.x += float(i) / xDivide * sin(uv.x / xDivider + stream / 5.) * .4229 * cos(uv.y / yShape + stream / 1.5);\n    float t = 1.1 * float(i) * PI / float(BALLS) * (2. + 1.) + stream / 90.;\n    float x = -1. * tan(t - stream / 10.); // + stream/100.);\n    float y = sin(t * multiplier); // + stream/401.);\n    vec2 p = radius * vec2(x, y);\n    p /= sin(PI * sin(uv.x / shape)); //+cos(uv.x/300.-stream/1.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (.02 * float(BALLS) + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(float(i) / 40. * pow(volume, .75) * ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          116.00066318094458,
          0,
          383.44,
          false,
          false
        ],
        [
          "yDivider",
          0,
          2.0108340560372664,
          0,
          4.04,
          false,
          false
        ],
        [
          "xDivider",
          0,
          19.66732405775273,
          0,
          39.54,
          false,
          false
        ],
        [
          "multiplier",
          0,
          5,
          0,
          10,
          false,
          false
        ],
        [
          "ballSize",
          0,
          26.2977033459619,
          0,
          52.7,
          false,
          false
        ],
        [
          "contrast",
          0,
          3.1896125184039077,
          0,
          6.38,
          false,
          false
        ],
        [
          "radius",
          0,
          51.601894147360014,
          0,
          51.76,
          false,
          false
        ],
        [
          "rotation",
          0,
          10.745,
          0,
          178.96,
          false,
          false
        ],
        [
          "yDivide",
          0,
          225.75,
          0,
          451.5,
          false,
          false
        ],
        [
          "xDivide",
          0,
          1.485310136543849,
          0,
          2.98,
          false,
          false
        ],
        [
          "yShape",
          0,
          14.65960528313752,
          0,
          29.46,
          false,
          false
        ],
        [
          "shape",
          0,
          71.5548653767282,
          0,
          142.16,
          false,
          false
        ],
        [
          "dotted",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          41.078,
          0,
          383.44,
          false
        ],
        [
          "yDivider",
          0,
          0.648,
          0,
          4.04,
          false,
          false
        ],
        [
          "xDivider",
          0,
          4.401,
          0,
          39.54,
          false,
          false
        ],
        [
          "multiplier",
          0,
          5,
          0,
          10,
          false,
          false
        ],
        [
          "ballSize",
          0,
          18.522,
          0,
          52.7,
          false,
          false
        ],
        [
          "contrast",
          0,
          3.132,
          0,
          6.38,
          false,
          false
        ],
        [
          "radius",
          0,
          28.094,
          0,
          51.76,
          false,
          false
        ],
        [
          "rotation",
          0,
          10.745,
          0,
          178.96,
          false,
          false
        ],
        [
          "yDivide",
          0,
          225.75,
          0,
          451.5,
          false,
          false
        ],
        [
          "xDivide",
          0,
          0.788,
          0,
          2.98,
          false,
          false
        ],
        [
          "yShape",
          0,
          4.193,
          0,
          29.46,
          false,
          false
        ],
        [
          "shape",
          0,
          142.16,
          0,
          142.16,
          false,
          false
        ],
        [
          "dotted",
          1,
          false,
          null,
          null,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e2",
    "shader": "#define orbs 20.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv = abs(uv);\n  //  uv *= k_rotate2d(-stream/10.);\n  //  uv = k_kale(uv, vec2(0.),sides);\n  //uv *= k_rotate2d(stream/5.);\n  //uv *= k_rotate2d(rotation*stream/5.);\n\n  uv /= dot(uv, uv);\n  //uv *= k_rotate2d(rotation*stream/10.);\n  for (float i = 0.; i < 20.; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream * xSpeed) + cos(uv.y / yDivide - stream / 2.);\n    uv.y += cosMul * cos(uv.x * xMul - stream * ySpeed) - sin(uv.x / xDivide - stream / 2.);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t - stream / 50.);\n    float y = radius * cos(t + stream / 50.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, volume*orbSize, position, 1. - color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.12,
          0,
          0.24,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.234,
          0,
          2.78,
          false,
          false
        ],
        [
          "orbSize",
          0,
          2.298,
          0,
          6,
          false,
          false
        ],
        [
          "radius",
          0,
          20.95,
          0,
          41.9,
          false,
          false
        ],
        [
          "colorShift",
          0,
          5.41,
          0,
          10.82,
          false,
          false
        ],
        [
          "sides",
          0,
          1,
          0,
          2,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0.56,
          0,
          1.12,
          false,
          false
        ],
        [
          "cosMul",
          0,
          0.88,
          0,
          1.76,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.56,
          0,
          1.12,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          1,
          0,
          2,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          -2,
          -4,
          0,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0051,
          0,
          0.0102,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.65,
          0,
          7.3,
          false,
          false
        ],
        [
          "xDivide",
          0,
          32.82,
          0,
          65.64,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e4",
    "shader": "#define orbs 15.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv *= k_rotate2d(stream / 24.);\n  uv = k_kale(uv, vec2(dist), sides);\n  for (float i = 0.; i < 20.; i++) {\n    float t = i / PI / orbs * 8.;\n    float x = t + radius * cos(dist * t - stream / 3.) * sin(dist + stream / 8.5);\n    float y = 0.;\n    vec2 position = vec2(x + sin(x+stream/2. + dist), y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, volume * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          3.889,
          0,
          5.22,
          false
        ],
        [
          "contrast",
          0,
          1.13,
          0,
          2.26,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.016,
          0,
          0.082,
          false
        ],
        [
          "radius",
          0,
          0.29,
          0,
          2.9,
          false
        ],
        [
          "colorShift",
          0,
          4.5,
          0,
          9,
          false,
          false
        ],
        [
          "center",
          0,
          0.942,
          0,
          1.88,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          6,
          true
        ],
        [
          "shape",
          0,
          0.72,
          0,
          0.72,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e3",
    "shader": "#define orbs 20.\n\nvoid main() {\n float stream =stream / 6.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n\n  float dist = length(uv); \n uv *= k_rotate2d(-.8*stream);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream);\n  uv += sin(dotMul * dot(uv + sinMul * sin(uv - stream), uv));\n  uv /= dot(tan(uv), cos(uv));\n  for (float i = 0.; i < 20.; i++) {\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(cos(t - stream / 10.) - stream/10.);\n    float y = radius * cos(sin(t + stream / 10.) + stream/20.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, (uv.x * .02 * dist + orbSize) * pow(volume, .7), position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          5.831,
          0,
          20,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.21,
          0,
          4.42,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.685,
          0,
          0.76,
          false,
          false
        ],
        [
          "radius",
          0,
          2.435,
          0,
          3.52,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.69,
          0,
          9.38,
          false,
          false
        ],
        [
          "center",
          0,
          2.82,
          0,
          5.64,
          false,
          false
        ],
        [
          "sides",
          0,
          6,
          0,
          12,
          false,
          false
        ],
        [
          "dotMul",
          0,
          0.3,
          0,
          0.6,
          false,
          false
        ],
        [
          "sinMul",
          0,
          7.27,
          0,
          14.54,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e5",
    "shader": "#define BALLS 20\n\nvoid main() {\n  float stream = stream / .2;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  gl_FragColor = vec4(0);\n  uv = normalize(uv) * length(uv);\n  uv = zoom * (uv); //(1.+ProgressBasis/2.);\n  if (invertTween) {\n    if (invert) {\n      uv = mix(uv, abs(uv), invertTweenProgress);\n    } else {\n      uv = mix(abs(uv), uv, invertTweenProgress);\n    }\n  } else if (invert) {\n    uv = abs(uv);\n  }\n  float dist = distance(uv, vec2(0));\n  float thing = .005 * sin(shapeMultiplier * dot(uv, uv) / dist - stream / 2.);\n  //  vec2 _kale = k_kale(uv, vec2(0.), sides);\n  uv *= k_rotate2d(rotation * (dist - stream / 13.));\n  float _grid = (cos(uv.x * xMultiplier - stream / 8.) + sin(uv.y * yMultiplier + stream / 6.));\n  uv /= colorSpread * thing * _grid;\n  uv *= dist;\n  uv.x = uv.y; //sin(uv.y+stream/.1);\n  for (int i = 0; i < BALLS; i++) {\n    uv *= k_rotate2d(dist * float(i)); //-stream/10.);\n    float t = float(i) * PI / float(BALLS); // - stream/4.;\n    vec2 p = radius * vec2(radius * tan(t), radius * cos(t));\n    //p += log(sin(stream/3. + float(i) * PI));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 20. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(volume*ballSize / length(uv + p * colorMultiplier) * col, 1.0);\n  }\n  gl_FragColor.xyz = glow * brightness * pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n  gl_FragColor = k_hue(gl_FragColor, stream / 50.);\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.053,
          0,
          0.13,
          false,
          false
        ],
        [
          "shapeMultiplier",
          0,
          223.96,
          0,
          447.92,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          217.723,
          0,
          3385.88,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          157.966,
          0,
          1223,
          false,
          false
        ],
        [
          "colorSpread",
          0,
          0.001,
          0,
          0.002,
          false,
          false
        ],
        [
          "colorMultiplier",
          0,
          0.863,
          0,
          1.62,
          false,
          false
        ],
        [
          "invert",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "brightness",
          0,
          1.636,
          0,
          7.72,
          false,
          false
        ],
        [
          "ballSize",
          0,
          17.795,
          0,
          18.74,
          false,
          false
        ],
        [
          "glow",
          0,
          0.714,
          0,
          2.32,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.278,
          0,
          10,
          false,
          false
        ],
        [
          "radius",
          0,
          15.459,
          0,
          23.84,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e6",
    "shader": "#define BALLS 15\n\nvoid main() {\n  float stream = stream / 2.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  if (invertTween) {\n    if (invert) {\n      uv = mix(uv, abs(uv), invertTweenProgress);\n    } else {\n      uv = mix(abs(uv), uv, invertTweenProgress);\n    }\n  } else if (invert) {\n    uv = abs(uv);\n  }\n  uv *= zoom2;\n  uv *= k_rotate2d(stream / -3. + length(.6 * cos(uv - stream / 4.)) / 1.);\n  uv = zoom * (log(abs(uv)) + 1.5 * cos(uv)); //(1.+ProgressBasis/2.);\n  float dist = distance(uv, vec2(0));\n  float thing = .005 * sin(shapeMultiplier * dot(uv, uv) / dist - stream / .2);\n  //  vec2 _kale = k_kale(uv, vec2(0.), sides);\n  uv *= k_rotate2d(rotation * (dist + stream / 2.));\n  float _grid = (cos(uv.x * xMultiplier - stream / 5.) - sin(uv.y * yMultiplier + stream / -10.));\n  uv /= colorSpread * thing * _grid;\n  uv *= .1 * dist;\n\n  for (int i = 0; i < BALLS; i++) {\n    uv *= k_rotate2d(dist * float(i)); //-stream/10.);\n    float t = float(i) * PI / float(BALLS) - stream / 140.;\n    vec2 p = radius * vec2(radius * tan(t), radius * cos(t));\n    //p += log(sin(stream/3. + float(i) * PI));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 500. + uv.y / 850. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(volume * ballSize / length(uv + p * colorMultiplier) * col, 1.0);\n  }\n  gl_FragColor.xyz = glow * brightness * pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.008,
          0,
          0.028,
          false,
          false
        ],
        [
          "shapeMultiplier",
          0,
          589.178,
          0,
          1518.42,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.012,
          0,
          0.05134,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          251.592,
          0,
          1469.28,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          1549.9,
          0,
          11111,
          false,
          false
        ],
        [
          "colorSpread",
          0,
          0.000012,
          0,
          0.000024,
          false,
          false
        ],
        [
          "colorMultiplier",
          0,
          0.51,
          0,
          1.02,
          false,
          false
        ],
        [
          "invert",
          1,
          false,
          null,
          null,
          false,
          false
        ],
        [
          "brightness",
          0,
          1.86,
          0,
          3.72,
          false,
          false
        ],
        [
          "ballSize",
          0,
          6.194,
          0,
          28.78,
          false,
          false
        ],
        [
          "glow",
          0,
          4.435,
          0,
          7.58,
          false,
          false
        ],
        [
          "contrast",
          0,
          3.189,
          0,
          4.3,
          false,
          false
        ],
        [
          "radius",
          0,
          10.691,
          0,
          38.32,
          false,
          false
        ],
        [
          "zoom2",
          0,
          0.48,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e7",
    "shader": "void main() {\n  float stream = stream / 5.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  uv *= k_rotate2d(-stream/5.);\n  vec2 _uv = uv;\n  float dist = length(uv);\n  float thing = dist * .001 * sin(shapeMultiplier * dot(uv, uv) / dist - stream/.1);\n  float _grid = (cos(uv.x * xMultiplier - stream) + sin(uv.y * yMultiplier + stream / .5));\n  uv /= colorSpread * thing * _grid;\n  uv *= dist;\n  float i = uv.x / granularity;\n  vec2 p = vec2(sin(i), cos(i));\n  vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (float(i) / 3.)) * 0.5 + 0.5;\n  gl_FragColor = vec4(ballSize / length(uv + p * colorMultiplier) * col, 1.0);\n  gl_FragColor.xyz = volume * (glow * brightness * pow(gl_FragColor.xyz, vec3(contrast)));\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.177,
          0,
          0.68,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          20.37,
          0,
          40.74,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          44.741,
          0,
          62.28,
          false,
          false
        ],
        [
          "ballSize",
          0,
          2.769,
          0,
          9.34,
          false,
          false
        ],
        [
          "colorSpread",
          0,
          1.681,
          0,
          11.34,
          false,
          false
        ],
        [
          "colorMultiplier",
          0,
          71.815,
          0,
          228.3,
          false,
          false
        ],
        [
          "shapeMultiplier",
          0,
          76.571,
          0,
          226.04,
          false,
          false
        ],
        [
          "glow",
          0,
          4786.254,
          0,
          18444.68,
          false,
          false
        ],
        [
          "contrast",
          0,
          3.473,
          0,
          7.5,
          false,
          false
        ],
        [
          "brightness",
          0,
          10.92,
          0,
          21.84,
          false,
          false
        ],
        [
          "center",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "granularity",
          0,
          22,
          0,
          44,
          false,
          false
        ],
        [
          "radius",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e8",
    "shader": "#define BALLS 5\n\nvoid main() {\n  float stream = stream / 3.2718;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  for (int i = 0; i < BALLS; i++) {\n    uv *= k_rotate2d(rotation * sin(PI * float(1 + i)) + stream / rotationFactor * dist / rot2);\n    float t = float(i) * PI / float(BALLS) / divider;\n    float a = cos(float(i) * dist - uv.x/xDiv2);\n    float b = radius * sin(t) * sinMul * cos(stream*rotationSpeed + uv.x/wap + sin(uv.y / yDiv2));\n    float c = sin(uv.y / yDiv);\n    float x = xOuter - a * uv.x / dist * PI + b;\n    float y = radius * cos(dist + yOuter * uv.x / xDiv + t + yMultiplier - stream/.251);\n    vec2 p = vec2(x, y);\n    vec3 col = cos(c + vec3(-2, 0, -1) * PI * 2. / 3. + PI * (stream/colorSpeed)) * 0.5 + 0.5;\n    gl_FragColor += vec4(ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz =1. - pow(abs(log(abs(gl_FragColor.xyz))), vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          6.404439730457706,
          0,
          88,
          false,
          false
        ],
        [
          "ballSize",
          0,
          1.4751218196831208,
          0,
          31.538,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.15,
          0,
          4.3,
          false,
          false
        ],
        [
          "radius",
          0,
          4.88,
          0,
          9.76,
          false,
          false
        ],
        [
          "yOuter",
          0,
          1.5,
          0,
          3,
          false,
          false
        ],
        [
          "xOuter",
          0,
          6.71,
          0,
          13.42,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          0.65,
          0,
          1.3,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          4.84,
          0,
          9.68,
          false,
          false
        ],
        [
          "divider",
          0,
          28,
          0,
          56,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xDiv",
          0,
          30.19,
          0,
          32,
          false,
          false
        ],
        [
          "colorSpeed",
          0,
          64.79,
          0,
          112,
          false,
          false
        ],
        [
          "rotationSpeed",
          0,
          1.75,
          0,
          21,
          false,
          false
        ],
        [
          "yDiv",
          0,
          28.3,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          330.32,
          20,
          600,
          false,
          false
        ],
        [
          "xDiv2",
          0,
          1,
          0,
          2,
          false,
          false
        ],
        [
          "rotationFactor",
          0,
          87.67,
          0,
          112,
          false,
          false
        ],
        [
          "rot2",
          0,
          1112,
          0,
          1112,
          false,
          false
        ],
        [
          "yDiv2",
          0,
          9.81,
          0,
          12,
          false,
          false
        ],
        [
          "wap",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          8.768,
          0,
          88,
          false,
          false
        ],
        [
          "ballSize",
          0,
          29.087,
          0,
          31.538,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.15,
          0,
          4.3,
          false,
          false
        ],
        [
          "radius",
          0,
          18.114,
          0,
          119.76,
          false,
          false
        ],
        [
          "yOuter",
          0,
          2.31,
          0,
          3,
          false,
          false
        ],
        [
          "xOuter",
          0,
          6.981,
          0,
          13.42,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          0.74,
          0,
          1.3,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          1.881,
          0,
          9.68,
          false,
          false
        ],
        [
          "divider",
          0,
          20.309,
          0,
          56,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xDiv",
          0,
          4.51,
          0,
          32,
          false,
          false
        ],
        [
          "colorSpeed",
          0,
          64.79,
          0,
          112,
          false,
          false
        ],
        [
          "rotationSpeed",
          0,
          1.75,
          0,
          21,
          false,
          false
        ],
        [
          "yDiv",
          0,
          10.09,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          330.32,
          20,
          600,
          false,
          false
        ],
        [
          "xDiv2",
          0,
          1.17,
          0,
          2,
          false,
          false
        ],
        [
          "rotationFactor",
          0,
          87.67,
          0,
          112,
          false,
          false
        ],
        [
          "rot2",
          0,
          1112,
          0,
          1112,
          false,
          false
        ],
        [
          "yDiv2",
          0,
          9.81,
          0,
          12,
          false,
          false
        ],
        [
          "wap",
          0,
          2,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          30.768,
          0,
          88,
          false,
          false
        ],
        [
          "ballSize",
          0,
          25.846,
          0,
          31.538,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.088,
          0,
          4.3,
          false,
          false
        ],
        [
          "radius",
          0,
          30.748,
          0,
          119.76,
          false,
          false
        ],
        [
          "yOuter",
          0,
          1.5,
          0,
          3,
          false,
          false
        ],
        [
          "xOuter",
          0,
          6.71,
          0,
          13.42,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          0.65,
          0,
          1.3,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          4.84,
          0,
          9.68,
          false,
          false
        ],
        [
          "divider",
          0,
          0.433,
          0,
          56,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xDiv",
          0,
          30.19,
          0,
          32,
          false,
          false
        ],
        [
          "colorSpeed",
          0,
          12.49,
          0,
          112,
          false,
          false
        ],
        [
          "rotationSpeed",
          0,
          1.67,
          0,
          21,
          false,
          false
        ],
        [
          "yDiv",
          0,
          28.3,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          330.32,
          20,
          600,
          false,
          false
        ],
        [
          "xDiv2",
          0,
          1,
          0,
          2,
          false,
          false
        ],
        [
          "rotationFactor",
          0,
          108.54,
          0,
          112,
          false,
          false
        ],
        [
          "rot2",
          0,
          1112,
          0,
          1112,
          false
        ],
        [
          "yDiv2",
          0,
          9.81,
          0,
          12,
          false,
          false
        ],
        [
          "wap",
          0,
          8.43,
          0,
          12,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          11.833,
          0,
          88,
          false,
          false
        ],
        [
          "ballSize",
          0,
          15.769,
          0,
          31.538,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.15,
          0,
          4.3,
          false,
          false
        ],
        [
          "radius",
          0,
          4.88,
          0,
          9.76,
          false,
          false
        ],
        [
          "yOuter",
          0,
          1.5,
          0,
          3,
          false,
          false
        ],
        [
          "xOuter",
          0,
          6.71,
          0,
          13.42,
          false,
          false
        ],
        [
          "mirror",
          1,
          true,
          null,
          null,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          0.65,
          0,
          1.3,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          4.84,
          0,
          9.68,
          false,
          false
        ],
        [
          "divider",
          0,
          28,
          0,
          56,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xDiv",
          0,
          30.19,
          0,
          32,
          false,
          false
        ],
        [
          "colorSpeed",
          0,
          64.79,
          0,
          112,
          false,
          false
        ],
        [
          "rotationSpeed",
          0,
          1.75,
          0,
          21,
          false,
          false
        ],
        [
          "yDiv",
          0,
          28.3,
          0,
          50,
          false,
          false
        ],
        [
          "sinMul",
          0,
          330.32,
          20,
          600,
          false,
          false
        ],
        [
          "xDiv2",
          0,
          1,
          0,
          2,
          false,
          false
        ],
        [
          "rotationFactor",
          0,
          87.67,
          0,
          112,
          false,
          false
        ],
        [
          "rot2",
          0,
          1112,
          0,
          1112,
          false,
          false
        ],
        [
          "yDiv2",
          0,
          9.81,
          0,
          12,
          false,
          false
        ],
        [
          "wap",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8e9",
    "shader": "mat2 r2d (in float degree)\n{\n\tfloat rad = radians (degree);\n\tfloat c = cos (rad);\n\tfloat s = sin (rad);\n\treturn mat2 (vec2 (c, s),vec2 (-s, c));\n}\n\n// using a slightly adapted implementation of iq's simplex noise from\n// https://www.shadertoy.com/view/Msf3WH with hash(), noise() and fbm()\nvec2 hash (in vec2 p)\n{ \n\tp = vec2 (dot (p, vec2 (1227.1, 311.7)),\n\t\t\t  dot (p, vec2 (269.5, 183.3)));\n\n\treturn -1. + 102.*fract (sin (p)*43758.5453123);\n}\n\nfloat noise (in vec2 p)\n{\n    const float K1 = .366025404;\n    const float K2 = .211324865;\n\n\tvec2 i = floor (p + (p.x + p.y)*K1);\n\t\n    vec2 a = p - i + (i.x + i.y)*K2;\n    vec2 o = step (a.yx, a.xy);    \n    vec2 b = a - o + K2;\n\tvec2 c = a - 1. + 2.*K2;\n\n    vec3 h = max (.5 - vec3 (dot (a, a), dot (b, b), dot (c, c) ), .0);\n\n\tvec3 n = h*h*h*h*vec3 (dot (a, hash (i + .0)),\n\t\t\t\t\t\t   dot (b, hash (i + o)),\n\t\t\t\t\t\t   dot (c, hash (i + 1.)));\n\n    return dot (n, vec3 (3.));\n}\n\nfloat fbm (in vec2 p)\n{\n\tmat2 rot = r2d (11111111.5);\n    float d = noise (p); p *= rot;\n    d += 1.5*noise (p); p *= rot;\n    d += .25*noise (p); p *= rot;\n    d += .125*noise (p); p *= rot;\n    d += .625*noise (p);\n\td /= (1. + .5 + .25 + .125 + .0625);\n\treturn d;\n}\n\nvec2 mapToScreen (in vec2 p, in float scale)\n{\n    vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n    uv.x *= resolution.x/resolution.y;\n    uv *= zoom;\n    return uv;//- (sin(stream/5.+uv));\n}\n\nvec2 cart2polar (in vec2 cart)\n{\n    float r = length (cart);\n    float phi = atan (cart.y, cart.x);\n    return vec2 (r, phi); \n}\n\nvec2 polar2cart (in vec2 polar)\n{\n  float x = polar.x;\n  float y= polar.y;\n  vec2 fuck = vec2(x, y);\n    return vec2 (fuck); \n}\n\nvoid main ()\n{\n   float stream = stream / 3.;\n    vec2 uv = mapToScreen (gl_FragCoord.xy/resolution.xy, zoom);\n    float len = length (sin(uv-stream));\n//  uv -= dot(uv, uv) - uv/2.;\n\n //  uv =(polar2cart (uv));\n\n\t\tfloat thicc = thickness * length(abs(uv))*length(sin(uv+stream));\n    float d1 = size*abs (sin(stream+uv.x*haze)*thicc * (cos(uv.x+stream) + abs(fbm (a*uv + stream))));\n    uv = abs(uv);\n    float d2 = size*abs (sin(stream-uv.y*haze)*thicc * (sin(uv.y-stream) * abs(fbm (b*uv + stream))));\n    float d3 = size*abs (cos(stream+uv.x*uv.y/haze)*thicc / (uv.x+log(uv.y) + fbm (c*uv + stream)));\n    vec3 col = vec3 (.0);\n\tcol += d1*size*abs(sin(col1-stream/20.));\n\tcol += d2*size*abs(cos(col2-stream/20.));\n\tcol += d3*size*col3;\n\n    gl_FragColor = vec4 (.5-1.*sin(log(col)), 1.);\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.023,
          0,
          0.03,
          false,
          false
        ],
        [
          "bump",
          0,
          0.18,
          0,
          0.2,
          false,
          false
        ],
        [
          "zoom",
          0,
          0.52,
          0,
          2,
          false,
          false
        ],
        [
          "thickness",
          0,
          0.0028,
          0,
          0.1,
          false,
          false
        ],
        [
          "haze",
          0,
          2,
          2,
          100,
          false,
          false
        ],
        [
          "col1",
          3,
          [
            0.9529411764705882,
            0.9137254901960784,
            0.3686274509803922
          ],
          null,
          null,
          false,
          false
        ],
        [
          "col2",
          3,
          [
            0.12156862745098039,
            0.8235294117647058,
            1
          ],
          null,
          null,
          false,
          false
        ],
        [
          "col3",
          3,
          [
            0,
            1,
            0.06666666666666667
          ],
          null,
          null,
          false,
          false
        ],
        [
          "size",
          0,
          0.005,
          0,
          0.05,
          false,
          false
        ],
        [
          "a",
          0,
          24.47,
          0,
          100,
          false,
          false
        ],
        [
          "b",
          0,
          4.95,
          0,
          50,
          false,
          false
        ],
        [
          "c",
          0,
          11.59,
          0,
          50,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ea",
    "shader": "#define BALLS 15\n  \nfloat stepping(float t) {\n  if (t < 0.) return -1. + pow(1. + t, 2.);\n  else return 1. - pow(1. - t, 2.);\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv = normalize(abs(uv) + sin(abs(uv)-stream)) * length(uv);\n//  uv /= .1*tan(.1*dot(1.1*tan(uv), 5.*atan(uv)) - stream/5.);\n // uv /= dot(sin(uv+stream), cos(uv+stream));\n // uv += sin(.01*dot(tan(uv+stream/20.), tan(uv-stream/20.)) - stream/5.);\n  uv *= rotate2d(rotation);\n  for (int i = 0; i < BALLS; i++) {\n    float dist = length(uv);\n\t\tuv.y += yOuter*sin(uv.y/yDivider + stream/5.) / 1.*sin(uv.x/1. - stream/3.);\n    uv.x -= xOuter*sin(uv.x/xDivider - stream/5.) / 1.*sin(uv.x/1.1 + stream/1.);\n    float t = float(i) * PI / float(BALLS) * (5. + 1.) + stream/5000.;\n    float _multiplier = dist*multiplier * sin(uv.x);\n    vec2 p = vec2(radius*-2.*tan(t*multiplier), 2.*radius*sin(t*multiplier));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 20. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(pow(volume, .75) * ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "speed",
          0,
          0.04,
          0,
          0.1,
          false,
          false
        ],
        [
          "bump",
          0,
          0.53,
          0,
          1,
          false,
          false
        ],
        [
          "zoom",
          0,
          27.87,
          0,
          150,
          false,
          false
        ],
        [
          "yDivider",
          0,
          187.19,
          0.1,
          1000,
          false,
          false
        ],
        [
          "xDivider",
          0,
          130.77,
          0.1,
          1000,
          false,
          false
        ],
        [
          "multiplier",
          0,
          583.53,
          0.1,
          1101,
          false,
          false
        ],
        [
          "ballSize",
          0,
          1.8,
          0,
          2,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.09,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          19.36,
          0,
          111,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0.42,
          0,
          1,
          false,
          false
        ],
        [
          "xOuter",
          0,
          0.42,
          0,
          1,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.58,
          0,
          5,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ec",
    "shader": "#define orbs 20.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float stream = stream / 4.;\n  float dist = length(uv);\n  uv *= k_rotate2d(-stream/5.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream);\n  uv += sin(dotMul * dot(uv + sinMul * sin(uv - stream), uv));\n  uv /= dot(tan(uv), cos(uv));\n  for (float i = 0.; i < 20.; i++) {\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan((t - stream / 10.) - stream);\n    float y = radius * cos((t + stream / 10.) + stream);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, uv.y * .01 * dist + orbSize* pow(volume, .7), position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          "7.411",
          0,
          20,
          false,
          false
        ],
        [
          "contrast",
          0,
          "2.19",
          0,
          4.42,
          false,
          false
        ],
        [
          "orbSize",
          0,
          "0.573",
          0,
          0.76,
          false,
          false
        ],
        [
          "radius",
          0,
          "2.499",
          0,
          3.52,
          false,
          false
        ],
        [
          "colorShift",
          0,
          "9.38",
          0,
          9.38,
          false,
          false
        ],
        [
          "center",
          0,
          "3.248",
          0,
          5.64,
          false,
          false
        ],
        [
          "sides",
          0,
          "6",
          0,
          12,
          false,
          false
        ],
        [
          "dotMul",
          0,
          "0.388",
          0,
          0.6,
          false,
          false
        ],
        [
          "sinMul",
          0,
          "6.426",
          0,
          14.54,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8eb",
    "shader": "void main () {\nfloat stream = stream / 3.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  mat2 rotation = k_rotate2d(stream/2.);\n  float ot = ot;\n  for (float i = 0.; i < 20.; i++) {\n    uv *= rotation;\n    uv = abs(uv) * iterator - 1.;\n    ot = dot(uv, uv) - atan(length(-1. + 2. * gl_FragCoord.xy / resolution.xy) / L + stream/1.569);\n    vec3 col = k_rainbow(i / iterations, colorShift, colorOffset);\n    gl_FragColor += k_orb(uv, volume/10., vec2(sin((-1. + 2. * gl_FragCoord.xy / resolution.xy).x), cos((-1. + 2. * gl_FragCoord.xy / resolution.xy).y)),  col, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          3.135,
          0,
          "21",
          false,
          false
        ],
        [
          "iterator",
          0,
          1.071,
          0,
          "2",
          false,
          false
        ],
        [
          "ot",
          0,
          63.521,
          0,
          "151",
          false,
          false
        ],
        [
          "I",
          0,
          2.264,
          0,
          "3",
          false,
          false
        ],
        [
          "J",
          0,
          1.356,
          0,
          "3",
          false,
          false
        ],
        [
          "K",
          0,
          3.881,
          0,
          "11",
          false,
          false
        ],
        [
          "iterations",
          0,
          18.705,
          0,
          "33",
          false,
          false
        ],
        [
          "L",
          0,
          0.651,
          0,
          "3",
          false,
          false
        ],
        [
          "M",
          0,
          9.278,
          0,
          "11",
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.676,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          0.5,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.676,
          0,
          "2",
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ed",
    "shader": "void main() {\n  float stream = stream / 7.8;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  uv /= dot(uv, uv);\n  uv *= k_rotate2d(stream/1.);\n  for (float i = 0.; i < 10.; i++) {\n    uv.x += a * cos(b * uv.y);\n    uv.y += c * cos(d * uv.x + stream/.15);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t - stream/2.4);\n    float y = radius * cos(t - stream/1.7);\n    vec2 position = vec2(x, y);\n    vec3 color = k_rainbow(i / orbs, colorShift, colorOffset);\n    gl_FragColor += k_orb(uv, pow(volume, .6) * orbSize, position, color, contrast);\n  }\n\n  gl_FragColor.xyz = 1. - pow(abs(1.-log(abs(gl_FragColor.xyz))), vec3(contrast));\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.32,
          0,
          0.5,
          false
        ],
        [
          "contrast",
          0,
          0.656,
          0,
          2.92,
          false
        ],
        [
          "orbSize",
          0,
          1.488,
          0,
          15.4,
          false
        ],
        [
          "radius",
          0,
          0,
          0,
          25.38,
          false
        ],
        [
          "colorShift",
          0,
          0.962,
          0,
          2,
          false
        ],
        [
          "orbs",
          0,
          16,
          0,
          30,
          true,
          false
        ],
        [
          "a",
          0,
          1.64,
          0,
          5,
          false,
          false
        ],
        [
          "b",
          0,
          0.56,
          0,
          5,
          false,
          false
        ],
        [
          "c",
          0,
          0.94,
          0,
          5,
          false,
          false
        ],
        [
          "d",
          0,
          0.43,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          0,
          0,
          12,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.307,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.358,
          0,
          2.92,
          false,
          false
        ],
        [
          "orbSize",
          0,
          5.006,
          0,
          15.4,
          false,
          false
        ],
        [
          "radius",
          0,
          2.979,
          0,
          25.38,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "orbs",
          0,
          16,
          0,
          30,
          true,
          false
        ],
        [
          "a",
          0,
          1.64,
          0,
          5,
          false,
          false
        ],
        [
          "b",
          0,
          0.56,
          0,
          5,
          false,
          false
        ],
        [
          "c",
          0,
          0.94,
          0,
          5,
          false,
          false
        ],
        [
          "d",
          0,
          0.66,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          4.12,
          0,
          12,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.145,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.35,
          0,
          2.92,
          false,
          false
        ],
        [
          "orbSize",
          0,
          8.789,
          0,
          15.4,
          false,
          false
        ],
        [
          "radius",
          0,
          0,
          0,
          25.38,
          false,
          false
        ],
        [
          "colorShift",
          0,
          1.277,
          0,
          2,
          false,
          false
        ],
        [
          "orbs",
          0,
          16,
          0,
          30,
          true,
          false
        ],
        [
          "a",
          0,
          5,
          0,
          5,
          false,
          false
        ],
        [
          "b",
          0,
          0.19,
          0,
          5,
          false,
          false
        ],
        [
          "c",
          0,
          1.77,
          0,
          5,
          false,
          false
        ],
        [
          "d",
          0,
          0.47,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          2.06,
          0,
          12,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.358,
          0,
          2.92,
          false,
          false
        ],
        [
          "orbSize",
          0,
          5.006,
          0,
          15.4,
          false,
          false
        ],
        [
          "radius",
          0,
          8.327,
          0,
          25.38,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.994,
          0,
          2,
          false,
          false
        ],
        [
          "orbs",
          0,
          16,
          0,
          30,
          true,
          false
        ],
        [
          "a",
          0,
          1.64,
          0,
          5,
          false,
          false
        ],
        [
          "b",
          0,
          0.56,
          0,
          5,
          false,
          false
        ],
        [
          "c",
          0,
          0.8,
          0,
          5,
          false,
          false
        ],
        [
          "d",
          0,
          0.66,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          9.29,
          0,
          12,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.089,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.617,
          0,
          2.92,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.993,
          0,
          15.4,
          false,
          false
        ],
        [
          "radius",
          0,
          8.327,
          0,
          25.38,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.227,
          0,
          2,
          false,
          false
        ],
        [
          "orbs",
          0,
          16,
          0,
          30,
          true,
          false
        ],
        [
          "a",
          0,
          1.64,
          0,
          5,
          false,
          false
        ],
        [
          "b",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "c",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "d",
          0,
          0.66,
          0,
          1,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          9.29,
          0,
          12,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 1,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ee",
    "shader": "/* Anti-aliasing code */\n\n#define _AA_START               \\\nvec3 tot;                       \\\nfor (int j = 0; j < AA; j++)    \\\nfor (int k = 0; k < AA; k++) {  \\\nvec2 o = vec2(float(j), float(k)) / float(AA) - 0.5;\n\n#define _AA_END       \\\n} tot /= float(AA*AA);  \\\ngl_FragColor = vec4(tot, 1.); \\\n\n/* \"Digital Abyss\" by @kishimisu (2022) - https://www.shadertoy.com/view/Dsj3WW\n *   \n * Interact with the mouse!  */\n\n#define AA 1 // Antialiasing level\n\nvoid main() { \n_AA_START     \n    float r, t = 1.;\n    vec2 mouse = vec2(0., 0.);\n    vec2  n       = resolution.xy,\n          i       = (gl_FragCoord.xy+(o-n)*.5)/n.x;\n          i *= zoom;\n\n    i *= k_rotate2d(stream/15.);\n    for (float a = 0.; a < 32.; a++) {        i = abs(i);\n\n        i *= k_rotate2d(a/50.);\n\n        vec3 p = r*vec3(i, wap);\n\n        p.xy  *= mat2(120.*sin(cos(stream/100.-.01*r/i.y/116.-sub) - vec4(A, B, C, D)-stream/5.));\n              i = abs(i);\n\n        p.z   += stream*.47590611;\n\n        p = (abs(fract(p)-.5)); \n        r += t = (p.x + p.y + p.z -dep)*mul;        \n    }\n    tot += mix(.17 - vec3(r*r*length(i)), \n        1.2 * cos(r - (vec3(.1, .7, 1.1) - length(i))), \n        exp(-r*.0007)); \n_AA_END \n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.024,
          0,
          0.1,
          false
        ],
        [
          "mul",
          0,
          0.46,
          0,
          1,
          false,
          false
        ],
        [
          "rot",
          0,
          489.87,
          0,
          1112,
          false,
          false
        ],
        [
          "sub",
          0,
          42.73,
          0,
          112,
          false,
          false
        ],
        [
          "A",
          0,
          2.34,
          0,
          4,
          false,
          false
        ],
        [
          "B",
          0,
          5.57,
          0,
          43,
          false,
          false
        ],
        [
          "C",
          0,
          10.18,
          0,
          34,
          false,
          false
        ],
        [
          "D",
          0,
          3.59,
          0,
          14,
          false,
          false
        ],
        [
          "dep",
          0,
          0.11,
          0,
          1,
          false,
          false
        ],
        [
          "wap",
          0,
          0.7,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 2,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8f0",
    "shader": "void main () {\n  gl_FragColor = vec4(0);\n  vec2 uv = k_uv() * zoom * k_rotate2d(stream/20.);\n  float dist = length(uv);\n  for (float i = 0.; i < 5.; i++) {\n    uv *= k_rotate2d(rotation / (i + 1.));\n    float t = float(i) * PI / float(4.) * (5. + 1.) / divider;// + stream/50.;\n    vec2 p = vec2(xOuter-(cos(xMultiplier*uv.x - stream/2.))*uv.x/yMultiplier*PI+radius*cos(t-stream/-10.)\n                  * yMultiplier*cos(stream/.5 -uv.x * sin(uv.y/4.-stream/1.6)), radius*\n                  cos(stream/3000. - 9.1*yOuter*uv.x/.5+t+yMultiplier+1.));\n    vec3 col = cos(sin(uv.y/7.-stream/40.)+vec3(-2, 0, -1) * PI * 2. / 3. + PI * (10.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = 1.-(pow(abs(log(abs(gl_FragColor.xyz))), vec3(contrast)));\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          20.93585278614458,
          0,
          50,
          false,
          false
        ],
        [
          "ballSize",
          0,
          10,
          2,
          10,
          false,
          false
        ],
        [
          "contrast",
          0,
          2.96,
          0,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          32.010777484939766,
          0,
          50,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0,
          0,
          0.05,
          false,
          false
        ],
        [
          "xOuter",
          0,
          21.24435240963856,
          1,
          241,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          1.3759412650602412,
          0,
          10,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          0.9386201054216868,
          0.2,
          2,
          false,
          false
        ],
        [
          "divider",
          0,
          1,
          1,
          2230,
          false,
          false
        ],
        [
          "rotation",
          0,
          2.778567394578314,
          0,
          5,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          33.7234092620482,
          0,
          50,
          false,
          false
        ],
        [
          "ballSize",
          0,
          3.170444277108434,
          2,
          10,
          false,
          false
        ],
        [
          "contrast",
          0,
          5.053252070783133,
          0,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          28.778237951807235,
          0,
          50,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0.004550781250000001,
          0,
          0.05,
          false,
          false
        ],
        [
          "xOuter",
          0,
          1,
          1,
          241,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          2.145849021084338,
          0,
          10,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          1.6400000000000003,
          0.2,
          2,
          false,
          false
        ],
        [
          "divider",
          0,
          1,
          1,
          2230,
          false,
          false
        ],
        [
          "rotation",
          0,
          3.607210090361446,
          0,
          5,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          33.7234092620482,
          0,
          50,
          false,
          false
        ],
        [
          "ballSize",
          0,
          6.476543674698796,
          2,
          10,
          false,
          false
        ],
        [
          "contrast",
          0,
          5.053252070783133,
          0,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          31.092338102409645,
          0,
          50,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0.0005304028614457833,
          0,
          0.05,
          false,
          false
        ],
        [
          "xOuter",
          0,
          130.72176204819277,
          1,
          241,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          1.1696630271084338,
          0,
          10,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          1.1726844879518075,
          0.2,
          2,
          false,
          false
        ],
        [
          "divider",
          0,
          1,
          1,
          2230,
          false,
          false
        ],
        [
          "rotation",
          0,
          3.607210090361446,
          0,
          5,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          13.757765436746988,
          0,
          50,
          false,
          false
        ],
        [
          "ballSize",
          0,
          6.476543674698796,
          2,
          10,
          false,
          false
        ],
        [
          "contrast",
          0,
          5.053252070783133,
          0,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          10.042356927710845,
          0,
          50,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0.011533635853503293,
          0,
          0.05,
          false,
          false
        ],
        [
          "xOuter",
          0,
          18.25225903614458,
          1,
          241,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          0.8655402861445785,
          0,
          10,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          2,
          0.2,
          2,
          false,
          false
        ],
        [
          "divider",
          0,
          1,
          1,
          2230,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          5,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8ef",
    "shader": "void main () {\n  float stream =stream * 1.6;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  uv *= k_rotate2d(stream / 21.);\n  for (float i = 0.; i < 15.; i++) {\n    uv = uv * iterator;\n    vec3 col = k_rainbow(i / iterations, colorShift, colorOffset);\n    float a = radius * cos(uv.x + stream / 14.);\n    float b = radius * sin(uv.y + stream / -5.);\n    float c = radius * wave * sin(split * uv.x - stream / 2.5);\n    float d = radius * wave * cos(split * uv.y  - stream / 5.5);\n    float x = a * b - c + d;\n    gl_FragColor += k_orb(uv,zoom* pow(volume,1.) * orbSize, vec2(x, x),  col, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          1.35424,
          0,
          3,
          false,
          false
        ],
        [
          "iterator",
          0,
          1.07941,
          0.7,
          1.5,
          false,
          false
        ],
        [
          "iterations",
          0,
          21.63525,
          0,
          33,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.79378,
          0,
          3,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          29.16356,
          15,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.93552,
          0,
          3,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.13542,
          0,
          1,
          false,
          false
        ],
        [
          "div",
          0,
          1.37978,
          0.01,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          4.11947,
          0,
          6,
          false,
          false
        ],
        [
          "wave",
          0,
          0.9217,
          0,
          20,
          false,
          false
        ],
        [
          "split",
          0,
          7.46972,
          0,
          15,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          1.16404,
          0,
          3,
          false,
          false
        ],
        [
          "iterator",
          0,
          0.92054,
          0.7,
          1.5,
          false,
          false
        ],
        [
          "iterations",
          0,
          21.63525,
          0,
          33,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.76422,
          0,
          3,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          19.50448,
          15,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.93552,
          0,
          3,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.13542,
          0,
          1,
          false,
          false
        ],
        [
          "div",
          0,
          1.37978,
          0.01,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          3.43899,
          0,
          6,
          false,
          false
        ],
        [
          "wave",
          0,
          1.61956,
          0,
          20,
          false,
          false
        ],
        [
          "split",
          0,
          14.62046,
          0,
          15,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.5544239457831327,
          0,
          3,
          false,
          false
        ],
        [
          "iterator",
          0,
          1.00471,
          0.7,
          1.5,
          false,
          false
        ],
        [
          "iterations",
          0,
          16.31461,
          0,
          33,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.33359,
          0,
          3,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          21.77581,
          15,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.21895,
          0,
          3,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.04777,
          0,
          1,
          false,
          false
        ],
        [
          "div",
          0,
          1.37978,
          0.01,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          3.11627,
          0,
          6,
          false,
          false
        ],
        [
          "wave",
          0,
          1.07795,
          0,
          20,
          false,
          false
        ],
        [
          "split",
          0,
          33.59867,
          0,
          44,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          2.88861,
          0,
          6,
          false,
          false
        ],
        [
          "iterator",
          0,
          0.80495,
          0.7,
          1.5,
          false,
          false
        ],
        [
          "iterations",
          0,
          13.72489,
          0,
          33,
          false,
          false
        ],
        [
          "colorShift",
          0,
          0.38237,
          0,
          2,
          false,
          false
        ],
        [
          "colorOffset",
          0,
          15.97272,
          15,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.05403,
          0,
          3,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.17637,
          0,
          1,
          false,
          false
        ],
        [
          "div",
          0,
          1.37978,
          0.01,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          4.26167,
          0,
          6,
          false,
          false
        ],
        [
          "wave",
          0,
          1.11087,
          0,
          20,
          false,
          false
        ],
        [
          "split",
          0,
          3.30232,
          0,
          44,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8db",
    "shader": "#define BALLS 30\n\nvoid main() {\n  float stream =stream / 40.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  uv /= dot(uv, uv);\n  // uv = uv*uv;\n  if (mirrorTween) {\n    if (mirror) {\n      uv = mix(uv, uv * uv, (mirrorTweenProgress));\n    } else {\n      uv = mix(uv * uv, uv, (mirrorTweenProgress));\n    }\n  } else if (mirror) {\n    uv = abs(uv);\n  }\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  for (int i = 0; i < BALLS; i++) {\n    uv *= k_rotate2d(rotation * 5. + -rotation + stream / 5.);\n    float t = float(i) * PI / float(BALLS) * (5. + 1.) / divider; // + stream/50.;\n    vec2 p = vec2(xOuter * (cos(uv.x - stream / .1)) * uv.x + radius * tan(t) * 20. * cos(uv.x + sin(uv.y / 100.)), radius * cos(.1 / dist * yOuter * uv.x / .5 + t + yMultiplier + 2. * stream));\n    vec3 col = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (stream / 3. / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(volume*ballSize / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = 1. - pow(abs(log(abs(gl_FragColor.xyz))), vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          1.78,
          0,
          3.56,
          false,
          false
        ],
        [
          "ballSize",
          0,
          0.811,
          0,
          1.622,
          false,
          false
        ],
        [
          "contrast",
          0,
          6.18,
          0,
          12.36,
          false,
          false
        ],
        [
          "radius",
          0,
          0.37,
          0,
          0.74,
          false,
          false
        ],
        [
          "yOuter",
          0,
          0,
          0,
          0,
          false,
          false
        ],
        [
          "xOuter",
          0,
          55.27,
          0,
          110.54,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          false,
          false
        ],
        [
          "xMultiplier",
          0,
          4.14,
          0,
          8.28,
          false,
          false
        ],
        [
          "yMultiplier",
          0,
          5.19,
          0,
          10.38,
          false,
          false
        ],
        [
          "divider",
          0,
          4,
          0,
          8,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.0576,
          0,
          0.1152,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f297ad0265dcaccb28d8dd",
    "shader": "#define orbs 20.\n\nvoid main() {\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n  uv *= zoom;\n  float dist = length(uv);\n  uv *= k_rotate2d(stream / 12.);\n  uv = k_kale(uv, vec2(center), sides);\n  uv *= k_rotate2d(stream / -15.);\n  uv *= sin(dotMul * dot(uv + xDot * cos(uv), .1 / dist * uv + yDot * cos(uv)) - stream / 10.);\n  for (float i = 0.; i < 20.; i++) {\n    float t = i * PI / orbs * 2.;\n    float x = radius * sin(t + stream / 10.);\n    float y = radius * cos(t - stream / 10.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += k_orb(uv, 1./length(uv)*pow(volume, .827) * orbSize, position, color, contrast);\n  }\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          10.141,
          0,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.6,
          0,
          3.2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          0.602,
          0,
          0.7,
          false,
          false
        ],
        [
          "radius",
          0,
          1.82,
          0,
          3.64,
          false,
          false
        ],
        [
          "colorShift",
          0,
          17.42,
          0,
          34.84,
          false,
          false
        ],
        [
          "center",
          0,
          7.68,
          0,
          15.36,
          false,
          false
        ],
        [
          "sides",
          0,
          6,
          0,
          12,
          false,
          false
        ],
        [
          "xDot",
          0,
          2.982958668830698,
          0,
          5.965917337661396,
          false,
          false
        ],
        [
          "yDot",
          0,
          2.59,
          0,
          5.18,
          false,
          false
        ],
        [
          "dotMul",
          0,
          0.11973979612093022,
          0,
          0.23947959224186044,
          false,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          0,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          10.141,
          0,
          30,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.6,
          0,
          3.2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          1.535,
          0,
          22,
          false,
          false
        ],
        [
          "radius",
          0,
          5.629,
          0,
          113.64,
          false,
          false
        ],
        [
          "colorShift",
          0,
          17.42,
          0,
          34.84,
          false,
          false
        ],
        [
          "center",
          0,
          5.341,
          0,
          15.36,
          false,
          false
        ],
        [
          "sides",
          0,
          6,
          0,
          12,
          false,
          false
        ],
        [
          "xDot",
          0,
          1.211,
          0,
          5.965917337661396,
          false,
          false
        ],
        [
          "yDot",
          0,
          0.554,
          0,
          5.18,
          false,
          false
        ],
        [
          "dotMul",
          0,
          0.11973979612093022,
          0,
          0.23947959224186044,
          false,
          false
        ],
        [
          "rotation",
          0,
          6.332,
          0,
          33,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T10:42:53.159Z",
    "updated": "2024-09-24T10:42:53.159Z",
    "__v": 0,
    "author": "66f0cfe8da9160b199e67c4e",
    "study": "66f2980c92cc9d303e380427"
  },
  {
    "_id": "66f2e3499d4334d41427cb36",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "#define BALLS 18\n  \nfloat stepping(float t) {\n  if (t < 0.) return -1. + pow(1. + t, 2.);\n  else return 1. - pow(1. - t, 2.);\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  gl_FragColor = vec4(0);\n  uv = normalize(uv) * length((uv));\n  float dist = length(uv);\n  uv *= k_rotate2d(PI /2.);\n\n  uv *= rotate2d(stream/10.);\n  for (int i = 0; i < BALLS; i++) {\n\t\tuv.y += a*float(i)*cos(uv.y/yDivider - stream/1.) + sin(uv.x/c - stream/1.);\n    uv.x += b*float(i)*cos(uv.y/xDivider - stream)+sin(uv.x/xDivider + stream) - sin(uv.y/d);\n    float t = .05*dist*float(i) * PI / float(BALLS) * (5. + 1.);\n    vec2 p = radius*vec2(-1.*cos(t), e*sin(t/multiplier));\n    p /= sin(PI * sin(uv.y/10.)*cos(uv.y/10.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (stream / 2. + float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(pow(volume, .7)*ballSize*1.1 / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(log(gl_FragColor.xyz), vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          31.948,
          0,
          211,
          false
        ],
        [
          "yDivider",
          0,
          1.5,
          0.1,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          0.9,
          0.1,
          19,
          false,
          false
        ],
        [
          "multiplier",
          0,
          1.07475,
          0.01,
          4,
          false
        ],
        [
          "ballSize",
          0,
          3.58,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          17.01,
          0,
          151,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.08,
          0,
          1,
          false,
          false
        ],
        [
          "a",
          0,
          0.13,
          0,
          1,
          false,
          false
        ],
        [
          "b",
          0,
          0,
          0,
          21,
          false,
          false
        ],
        [
          "c",
          0,
          2.33,
          0,
          22,
          false,
          false
        ],
        [
          "d",
          0,
          0.63,
          0,
          2,
          false,
          false
        ],
        [
          "e",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          20.68,
          0,
          111,
          false,
          false
        ],
        [
          "yDivider",
          0,
          19.63,
          0.1,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          0.49,
          0.1,
          19,
          false,
          false
        ],
        [
          "multiplier",
          0,
          64,
          0.01,
          64,
          false,
          false
        ],
        [
          "ballSize",
          0,
          1.1,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          6.19,
          0,
          151,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.17,
          0,
          1,
          false,
          false
        ],
        [
          "a",
          0,
          0,
          0,
          1,
          false,
          false
        ],
        [
          "b",
          0,
          0,
          0,
          21,
          false,
          false
        ],
        [
          "c",
          0,
          3.3,
          0,
          22,
          false,
          false
        ],
        [
          "d",
          0,
          0.71,
          0,
          2,
          false,
          false
        ],
        [
          "e",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          16.84005370031426,
          0,
          111,
          false,
          false
        ],
        [
          "yDivider",
          0,
          19.63,
          0.1,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          2.119977205335353,
          0.1,
          19,
          false,
          false
        ],
        [
          "multiplier",
          0,
          8.310778794401344,
          0.01,
          64,
          false,
          false
        ],
        [
          "ballSize",
          0,
          1.6599921687041703,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          0.8500047547153251,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          4.0500299267376345,
          0,
          151,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.17,
          0,
          1,
          false,
          false
        ],
        [
          "a",
          0,
          0.11999832186517936,
          0,
          1,
          false,
          false
        ],
        [
          "b",
          0,
          0,
          0,
          21,
          false,
          false
        ],
        [
          "c",
          0,
          6.879949935644517,
          0,
          22,
          false,
          false
        ],
        [
          "d",
          0,
          0.71,
          0,
          2,
          false,
          false
        ],
        [
          "e",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          16.43,
          0,
          111,
          false,
          false
        ],
        [
          "yDivider",
          0,
          3.47,
          0.1,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          0.79,
          0.1,
          19,
          false,
          false
        ],
        [
          "multiplier",
          0,
          0.83,
          0.01,
          4,
          false,
          false
        ],
        [
          "ballSize",
          0,
          3.58,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          13.28,
          0,
          151,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.16,
          0,
          1,
          false,
          false
        ],
        [
          "a",
          0,
          0.53,
          0,
          1,
          false,
          false
        ],
        [
          "b",
          0,
          0.08,
          0,
          1,
          false,
          false
        ],
        [
          "c",
          0,
          2.12,
          0,
          22,
          false,
          false
        ],
        [
          "d",
          0,
          1.16,
          0,
          12,
          false,
          false
        ],
        [
          "e",
          0,
          1,
          0,
          2,
          false,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          14.53,
          0,
          111,
          false,
          false
        ],
        [
          "yDivider",
          0,
          19.63,
          0.1,
          32,
          false,
          false
        ],
        [
          "xDivider",
          0,
          2.73,
          0.1,
          19,
          false,
          false
        ],
        [
          "multiplier",
          0,
          5.73,
          0.01,
          64,
          false,
          false
        ],
        [
          "ballSize",
          0,
          2.16,
          0,
          11,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.19,
          0,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          0.18,
          0,
          151,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.03,
          0,
          1,
          false,
          false
        ],
        [
          "a",
          0,
          0,
          0,
          1,
          false,
          false
        ],
        [
          "b",
          0,
          1.56,
          0,
          21,
          false,
          false
        ],
        [
          "c",
          0,
          7.05,
          0,
          22,
          false,
          false
        ],
        [
          "d",
          0,
          1.29,
          0,
          2,
          false,
          false
        ],
        [
          "e",
          0,
          0.94,
          0,
          2,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T16:05:29.622Z",
    "updated": "2024-09-24T16:05:29.622Z",
    "__v": 1
  },
  {
    "_id": "66f2eb5517196506820da41c",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "void main () {\n  float stream = stream / 75.;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom / 1090.;\n  uv *= k_rotate2d(stream/-.33726);\n  uv *= outer * (1.1 + cos(inner*dot(uv, uv) - stream/-.061271));\n  uv = abs(uv);\n  for (float i = 5.; i < 15.; i++) {\n    uv = uv * iterator;\n    vec3 col = k_rainbow(i / iterations, colorShift, colorOffset);\n    float a = radius * cos(uv.x + stream/.05);\n    float b = radius * sin(uv.y - stream/-.1);\n    float c = radius * wave * sin(split * uv.x - (stream / -.0355));\n    float d = radius * wave * cos(split * uv.y  - (stream / .035));\n    float x = a * b - c + d;\n    gl_FragColor += k_orb(uv,zoom* pow(volume, 1.)* orbSize, vec2(x, x),  col, contrast);\n  }\n\n  gl_FragColor = k_hue(gl_FragColor, stream/.5 + length(uv/.2));\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          0.267,
          0,
          3,
          false
        ],
        [
          "iterator",
          0,
          1.5,
          0.7,
          2,
          false
        ],
        [
          "iterations",
          0,
          1.412,
          0,
          33,
          false
        ],
        [
          "colorShift",
          0,
          0.035,
          0,
          3,
          false
        ],
        [
          "colorOffset",
          0,
          20.312,
          15,
          30,
          false
        ],
        [
          "contrast",
          0,
          1.294,
          0,
          3,
          false
        ],
        [
          "orbSize",
          0,
          7.351,
          0,
          15,
          false
        ],
        [
          "div",
          0,
          14.233,
          0.01,
          15,
          false
        ],
        [
          "radius",
          0,
          5.486,
          0,
          30,
          false
        ],
        [
          "wave",
          0,
          17.67,
          0,
          20,
          false
        ],
        [
          "split",
          0,
          500,
          0,
          500,
          false
        ],
        [
          "inner",
          0,
          9689533.356,
          0,
          11512120,
          false
        ],
        [
          "outer",
          0,
          2.616,
          0,
          401,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T16:39:49.092Z",
    "updated": "2024-09-24T16:39:49.092Z",
    "__v": 1
  },
  {
    "_id": "66f2ef2a17196506820da42e",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "#define orbs 5.\n\nvoid main () {\n  float stream = stream / 30.;\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= k_rotate2d(stream / .4);\n  uv /= dot(uv, uv);\n  uv *= zoom;\n  // gl_FragColor = vec4(0);\n  // float dist = length(uv);\n  uv *= k_rotate2d(stream / 2.);\n  // uv *= log(abs(uv));\n  // uv = normalize(uv) * length((uv));\n  vec2 _uv = uv;\n  uv *= (outer + outer2*sin(woot*cos(_uv.x/div2 + stream / .15) * _uv.y/div - stream/-.08));\n  uv -= 21212.5*tan(uv.x/zoom - stream/.28);\n  for (float i = 0.; i < orbs; i++) {\n    uv *= k_rotate2d(rotation * PI);\n    float t = float(i) * PI / float(orbs) * (2. + 1.);\n    vec2 p = vec2(radius*wat*tan(- t*PI), radius*sin(t - stream/-.08));\n    p /= (cos(wad * cos(stream/.3 - uv.x/x))*sin(stream/-.035- uv.y/(.9*y + .26*y*sin(stream/.3123))));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (.9 * float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(colorOffset*float(i)*pow(volume, .4)*ballSize / length(uv  - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = 1.-pow(abs(1.-log(abs(gl_FragColor.xyz))), vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          301487.844,
          0.01,
          2111000,
          false
        ],
        [
          "ballSize",
          0,
          37126.406,
          0,
          199999,
          false
        ],
        [
          "contrast",
          0,
          0.902,
          0,
          5,
          false
        ],
        [
          "radius",
          0,
          15666547.614,
          0,
          331115555,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "x",
          0,
          31929999,
          100,
          31929999,
          false
        ],
        [
          "y",
          0,
          40348628.99,
          0,
          119133112,
          false
        ],
        [
          "rotation",
          0,
          0.014,
          0,
          0.1,
          false
        ],
        [
          "colorOffset",
          0,
          326.72,
          0,
          2110,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          12,
          false,
          false
        ],
        [
          "kaleidoscope",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "div",
          0,
          100000,
          1,
          100000,
          false
        ],
        [
          "div2",
          0,
          1031881.214,
          0,
          1313311,
          false
        ],
        [
          "wad",
          0,
          8.806,
          1,
          18,
          false
        ],
        [
          "woot",
          0,
          0.223,
          0,
          2,
          false
        ],
        [
          "wat",
          0,
          0.075,
          0,
          0.4,
          false
        ],
        [
          "wob",
          0,
          61.937,
          0,
          160,
          false
        ],
        [
          "outer",
          0,
          133,
          0,
          133,
          false
        ],
        [
          "outer2",
          0,
          50.949,
          0,
          132,
          false
        ],
        [
          "wave",
          0,
          2.122,
          0,
          11,
          false
        ],
        [
          "aWave",
          0,
          0.336,
          0,
          1,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T16:56:10.587Z",
    "updated": "2024-09-24T16:56:10.587Z",
    "__v": 3
  },
  {
    "_id": "66f2fc9e17196506820da49d",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "#define orbs 20.\n\n  void main () {\n    vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy.xy;\n    uv.x *= resolution.x/resolution.y;\n    uv *= zoom;\n    uv *= k_rotate2d(stream/62.);\n    float dist = length(sin(cos(uv+stream/33.) + stream/2.5));\n    for (float i = 0.; i < orbs; i++) {\n      uv.x *= abs(dist+.001* dist*(i) * (uv.x/2.));\n      float t = (i+1.) * PI / orbs * 2.;\n      float x = radius * tan(t+stream/-4.);//* cos(t-stream/1.) / sin(t);\n      float y = radius * sin(t);// / sin(t-stream/1.) / cos(t);\n      vec2 position = vec2(x, y);\n      vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i+100.) / colorShift)) * 0.5 + 0.5;\n      gl_FragColor += k_orb(uv, pow(volume, 1.)*orbSize, position, color, contrast);\n    }\n  }",
    "variants": [
      [
        [
          "zoom",
          0,
          6.197,
          0,
          15,
          false
        ],
        [
          "contrast",
          0,
          1.682,
          0,
          2,
          false
        ],
        [
          "orbSize",
          0,
          1.314,
          0.01,
          2,
          false
        ],
        [
          "radius",
          0,
          7.257,
          1,
          50,
          false
        ],
        [
          "colorShift",
          0,
          5.092,
          4,
          10,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "kaleidoscope",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "center",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "sides",
          0,
          3,
          0,
          8,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T17:53:34.034Z",
    "updated": "2024-09-24T17:53:34.034Z",
    "__v": 4
  },
  {
    "_id": "66f2fd5b17196506820da4c2",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "\n  #define orbs 20.\n\n  vec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n} \n\nvec4 hue(vec4 color, float shift) {\n  const vec4 kRGBToYPrime = vec4(0.299, 0.587, 0.114, 0.0);\n  const vec4 kRGBToI = vec4(0.596, -0.275, -0.321, 0.0);\n  const vec4 kRGBToQ = vec4(0.212, -0.523, 0.311, 0.0);\n  const vec4 kYIQToR = vec4(1.0, 0.956, 0.621, 0.0);\n  const vec4 kYIQToG = vec4(1.0, -0.272, -0.647, 0.0);\n  const vec4 kYIQToB = vec4(1.0, -1.107, 1.704, 0.0);\n  float YPrime = dot(color, kRGBToYPrime);\n  float I = dot(color, kRGBToI);\n  float Q = dot(color, kRGBToQ);\n  float hue = atan(Q, I);\n  float chroma = sqrt(I * I + Q * Q);\n  hue += shift;\n  Q = chroma * sin(hue);\n  I = chroma * cos(hue);\n  vec4 yIQ = vec4(YPrime, I, Q, 0.0);\n  color.r = dot(yIQ, kYIQToR);\n  color.g = dot(yIQ, kYIQToG);\n  color.b = dot(yIQ, kYIQToB);\n  return color;\n}\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(2. * PI * (c * t + d));\n}\n\nvec4 orb (vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate (float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid main () {\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  uv *= rotate(stream/5.);\n  float dist = length(uv);\n  if (mirrorTween) {\n   \tif (mirror) { \n    \tuv = mix(uv, abs(uv), (mirrorTweenProgress));\n    } else {\n      uv = mix(abs(uv), uv, (mirrorTweenProgress));\n    }\n  } else if (mirror) {\n    uv = abs(uv);\n  }\n  //uv *= rotate(rotation*stream/5.);\n  uv /= dot(uv, uv);\n  //uv = kale(uv, vec2(0), sides);\n  //uv *= rotate(rotation*stream/10.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += sinMul * sin(uv.y * yMul + stream*xSpeed) - cos(uv.y/yDivide-stream/2.);\n    uv.y += cosMul * cos(uv.x * xMul - stream*ySpeed) * sin(uv.x/xDivide-stream/2.);\n    float t = i * PI / orbs * 2.;\n    float x = radius * tan(t-stream/5.);\n    float y = radius * cos(t+stream/5.);\n    vec2 position = vec2(x, y);\n    vec3 color = cos(vec3(-2, 0, -1) * PI * 2. / 3. + PI * (float(i) / colorShift)) * 0.5 + 0.5;\n    gl_FragColor += orb(uv, orbSize, position, color, contrast);\n  }\n}\n",
    "variants": [
      [
        [
          "zoom",
          0,
          0.31,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.46,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          2.7,
          0.01,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          12.69,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.31,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          7,
          0,
          12,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.66,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          1.09,
          0,
          5,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.26,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0022,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.06,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.59,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          2.7,
          0.01,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          18.4,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          10,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          7,
          0,
          12,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.66,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          1.09,
          0,
          5,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.26,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0022,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.14,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.46,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          2.7,
          0.01,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          12.69,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.31,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          7,
          0,
          12,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.66,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.26,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0022,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.62,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.5,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          2.7,
          0.01,
          5,
          false,
          false
        ],
        [
          "radius",
          0,
          10.4,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          4.31,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          7,
          0,
          12,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.66,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.26,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0059,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          0.43,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          12.45,
          0,
          19,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ]
      ],
      [
        [
          "zoom",
          0,
          0.05,
          0,
          1,
          false,
          false
        ],
        [
          "contrast",
          0,
          1.68,
          0,
          2,
          false,
          false
        ],
        [
          "orbSize",
          0,
          6.95,
          0.01,
          15,
          false,
          false
        ],
        [
          "radius",
          0,
          55.15,
          1,
          115,
          false,
          false
        ],
        [
          "colorShift",
          0,
          7.11,
          4,
          10,
          false,
          false
        ],
        [
          "sides",
          0,
          7,
          0,
          12,
          false,
          false
        ],
        [
          "rotation",
          0,
          0.66,
          0,
          2,
          false,
          false
        ],
        [
          "sinMul",
          0,
          0,
          0,
          2,
          false,
          false
        ],
        [
          "cosMul",
          0,
          1.09,
          0,
          5,
          false,
          false
        ],
        [
          "yMul",
          0,
          0,
          0,
          5,
          false,
          false
        ],
        [
          "xMul",
          0,
          0.26,
          0,
          5,
          false,
          false
        ],
        [
          "xSpeed",
          0,
          -1,
          -1,
          1,
          false,
          false
        ],
        [
          "ySpeed",
          0,
          1,
          0,
          1,
          false,
          false
        ],
        [
          "gloop",
          0,
          0.0022,
          0.001,
          0.01,
          false,
          false
        ],
        [
          "yDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "xDivide",
          0,
          3.33,
          0,
          19,
          false,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T17:56:43.005Z",
    "updated": "2024-09-24T17:56:43.005Z",
    "__v": 0
  },
  {
    "_id": "66f2fe7917196506820da4da",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "#define BALLS 45.\n\nvoid main() {\n  float stream = stream / 3.67950;\n  vec2 uv = -1. + 2. * gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x / resolution.y;\n\n  uv *= zoom;\n\n  // uv = abs(uv);\n  uv *= k_rotate2d(stream/8.);\n  gl_FragColor = vec4(0);\n  float dist = length(uv);\n  for (float i = 30.; i < BALLS; i++) {\n    // uv *= k_rotate2d(rotation * PI /1.);\n    uv.y -= float(i) / 12. * cos(uv.y / yDiv + stream / 1.) + sin(uv.x / xDiv2 - stream / 1.);\n    uv.x -= float(i) / 15. * sin(uv.x / xDiv + stream / 1.) - cos(uv.y / yDiv2 + stream / 1.);\n    float t = 1.1 * i * PI / BALLS * (5. + 1.);\n    float _multiplier = dist / multiplier * sin(uv.x - stream / 1.);\n    vec2 p = radius * vec2(xMul * tan(t + stream / 2.), yMul * sin(t / multiplier + stream / 1.));\n    p /= cos(PI * sin(uv.x / xDiv3 + stream / 1.) * sin(uv.y / yDiv3 - stream / 1.));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (5. - float(i) / PI)) * 0.5 + 0.5;\n    gl_FragColor += vec4(ballSize * pow(volume, .86)/3. / length(uv - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          248.939,
          0,
          1000,
          false
        ],
        [
          "xDiv",
          0,
          322.096,
          0,
          1000,
          false
        ],
        [
          "yDiv",
          0,
          486.62,
          0,
          2000,
          false
        ],
        [
          "xDiv2",
          0,
          80.919,
          0,
          200,
          false
        ],
        [
          "yDiv2",
          0,
          116.964,
          0,
          200,
          false,
          false
        ],
        [
          "xDiv3",
          0,
          26.013,
          0,
          2000,
          false
        ],
        [
          "yDiv3",
          0,
          26.786,
          0,
          2000,
          false,
          false
        ],
        [
          "multiplier",
          0,
          5.982,
          0,
          20,
          false,
          false
        ],
        [
          "ballSize",
          0,
          52.287,
          0,
          100,
          false
        ],
        [
          "contrast",
          0,
          1.688,
          0,
          4,
          false
        ],
        [
          "radius",
          0,
          26.877,
          0,
          250,
          false
        ],
        [
          "rotation",
          0,
          0,
          0,
          11,
          false,
          false
        ],
        [
          "xMul",
          0,
          3.482,
          0,
          20,
          false,
          false
        ],
        [
          "yMul",
          0,
          4.196,
          0,
          20,
          false,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T18:01:29.656Z",
    "updated": "2024-09-24T18:01:29.656Z",
    "__v": 0
  },
  {
    "_id": "66f3011917196506820da4fe",
    "study": "66f2980c92cc9d303e380427",
    "author": "66f0cfe8da9160b199e67c4e",
    "shader": "#define orbs 10.\n\nvoid main () {\n  float stream = stream / 17.;\n  vec2 uv = -1. + 2.* gl_FragCoord.xy / resolution.xy;\n  uv.x *= resolution.x/resolution.y;\n  uv *= zoom;\n  // gl_FragColor = vec4(0);\n  // float dist = length(uv);\n  uv *= k_rotate2d(stream / 1.28);\n  // uv /= dot(uv, uv);\n  // uv *= log(abs(uv));\n  // uv = normalize(uv) * length((uv));\n  vec2 _uv = uv;\n  uv *= (outer + outer2*sin(woot*cos(_uv.x/div2 + stream / .25) * _uv.y/div - stream/-1.18));\n  // uv= .5*tan(uv.y/300. - stream/.8);\n  for (float i = 0.; i < orbs; i++) {\n    uv *= k_rotate2d(rotation * PI);\n    float t = float(i) * PI / float(orbs) * (2. + 1.);\n    vec2 p = vec2(radius*wat*tan(stream/31.3 - t*PI), radius*tan(t - stream/-33.8));\n    p /= (cos(wad * cos(stream/.27 - uv.x/x))*sin(stream/-.29- uv.y/(.9*y + .6*y*sin(stream/.23))));\n    vec3 col = cos(vec3(0, 1, -1) * PI * 2. / 3. + PI * (.9 * float(i) / 5.)) * 0.5 + 0.5;\n    gl_FragColor += vec4(colorOffset*float(i)*ballSize / length(uv  - p * 0.9) * col, contrast);\n  }\n  gl_FragColor.xyz = 1.-pow(abs(1.-log(abs(gl_FragColor.xyz))), vec3(contrast));\n  gl_FragColor.w = 1.0;\n}",
    "variants": [
      [
        [
          "zoom",
          0,
          419328.267,
          0.01,
          2111000,
          false
        ],
        [
          "ballSize",
          0,
          9569.469,
          0,
          299999,
          false
        ],
        [
          "contrast",
          0,
          2.176,
          0,
          5,
          false
        ],
        [
          "radius",
          0,
          3832855.202,
          0,
          33331555,
          false
        ],
        [
          "mirror",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "x",
          0,
          129670504.048,
          10000000,
          192999999,
          false
        ],
        [
          "y",
          0,
          6535949.534,
          0,
          119133112,
          false
        ],
        [
          "rotation",
          0,
          0.006,
          0,
          0.01,
          false
        ],
        [
          "colorOffset",
          0,
          451.118,
          0,
          2110,
          false
        ],
        [
          "sides",
          0,
          3.5,
          0,
          12,
          false
        ],
        [
          "kaleidoscope",
          1,
          false,
          null,
          null,
          null,
          false
        ],
        [
          "div",
          0,
          37429.995,
          1,
          100000,
          false
        ],
        [
          "div2",
          0,
          500328.954,
          0,
          1313311,
          false
        ],
        [
          "wad",
          0,
          1.945,
          1,
          18,
          false
        ],
        [
          "woot",
          0,
          0.132,
          0,
          2,
          false
        ],
        [
          "wat",
          0,
          0.232,
          0,
          0.4,
          false
        ],
        [
          "wob",
          0,
          39.916,
          0,
          160,
          false
        ],
        [
          "outer",
          0,
          133,
          0,
          133,
          false
        ],
        [
          "outer2",
          0,
          65.295,
          0,
          132,
          false
        ],
        [
          "wave",
          0,
          1.181,
          0,
          11,
          false
        ],
        [
          "aWave",
          0,
          0.28,
          0,
          1,
          false
        ]
      ]
    ],
    "public": true,
    "created": "2024-09-24T18:12:41.934Z",
    "updated": "2024-09-24T18:12:41.934Z",
    "__v": 0
  }
]