export { loadImportedFile };
export { loadValueFile };
export { loadConfigFile };
export type { ImportedFilesLoaded };
export type { ConfigFile };
import type { FilePathResolved } from '../../../../../../shared/page-configs/FilePath.js';
import type { InterfaceValueFile } from '../getVikeConfig.js';
type ImportedFilesLoaded = Record<string, Promise<Record<string, unknown>>>;
type ConfigFile = {
    fileExports: Record<string, unknown>;
    filePath: FilePathResolved;
    extendsFilePaths: string[];
};
declare function loadImportedFile(import_: FilePathResolved & {
    fileExportName: string;
}, userRootDir: string, importedFilesLoaded: ImportedFilesLoaded): Promise<unknown>;
declare function loadValueFile(interfaceValueFile: InterfaceValueFile, configName: string, userRootDir: string): Promise<void>;
declare function loadConfigFile(configFilePath: FilePathResolved, userRootDir: string, visited: string[], isExtensionConfig: boolean): Promise<{
    configFile: ConfigFile;
    extendsConfigs: ConfigFile[];
}>;
