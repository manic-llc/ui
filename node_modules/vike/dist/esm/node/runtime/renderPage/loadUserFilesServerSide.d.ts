export { loadUserFilesServerSide };
export type { PageFiles };
export type { PageContext_loadUserFilesServerSide };
import { type PageFile } from '../../../shared/getPageFiles.js';
import { PromiseType } from '../utils.js';
import { PageContextGetPageAssets, type PageAsset } from './getPageAssets.js';
import { type PageContextDebugRouteMatches } from './debugPageFiles.js';
import type { PageConfigRuntime } from '../../../shared/page-configs/PageConfig.js';
type PageContext_loadUserFilesServerSide = PageContextGetPageAssets & PageContextDebugRouteMatches & {
    urlOriginal: string;
    _pageFilesAll: PageFile[];
    _pageConfigs: PageConfigRuntime[];
};
type PageFiles = PromiseType<ReturnType<typeof loadUserFilesServerSide>>;
declare function loadUserFilesServerSide(pageContext: {
    pageId: string;
} & PageContext_loadUserFilesServerSide): Promise<import("../../../shared/getPageFiles.js").PageContextExports & {
    Page: unknown;
    _isHtmlOnly: boolean;
    _passToClient: string[];
    _pageFilePathsLoaded: string[];
} & {
    __getPageAssets: () => Promise<PageAsset[]>;
}>;
