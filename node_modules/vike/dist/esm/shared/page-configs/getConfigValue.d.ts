export { getConfigValueRuntime };
export { getConfigValueTyped };
export type { TypeAsString };
import { type ResolveTypeAsString } from '../utils.js';
import type { PageConfigRuntime, ConfigValue } from './PageConfig.js';
import type { ConfigNameBuiltIn } from './Config.js';
type ConfigName = ConfigNameBuiltIn;
type TypeAsString = 'string' | 'boolean' | undefined;
declare function getConfigValueTyped<Type extends TypeAsString = undefined>(configValue: ConfigValue, configName: ConfigName, type?: Type): null | (ConfigValue & {
    value: ResolveTypeAsString<Type>;
});
declare function getConfigValueRuntime<Type extends TypeAsString = undefined>(pageConfig: PageConfigRuntime, configName: ConfigName, type?: Type): null | (ConfigValue & {
    value: ResolveTypeAsString<Type>;
});
