export { executeHook };
export { getPageContext };
export { providePageContext };
export { isUserHookError };
import type { PageContextClient, PageContextServer } from '../types.js';
import type { Hook, HookLoc } from './getHook.js';
type PageContextUnknown = null | Record<string, any>;
declare function isUserHookError(err: unknown): false | HookLoc;
declare function executeHook<T = unknown>(hookFnCaller: () => T, hook: Omit<Hook, 'hookFn'>, pageContext: PageContextUnknown): Promise<T>;
/**
 * Access `pageContext` object inside Vike hooks, in order to create universal hooks.
 *
 * https://vike.dev/getPageContext
 */
declare function getPageContext<PageContext = PageContextClient | PageContextServer>(): null | PageContext;
/**
 * Provide `pageContext` for universal hooks.
 *
 * https://vike.dev/getPageContext
 */
declare function providePageContext(pageContext: PageContextUnknown): void;
