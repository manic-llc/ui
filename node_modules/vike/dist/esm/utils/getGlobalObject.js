export { getGlobalObject };
export { assertIsSingleModuleInstance };
import { assert } from './assert.js';
import { projectInfo } from './projectInfo.js';
const projectKey = `_${projectInfo.projectName.toLowerCase()}`;
/** Share information across module instances. */
function getGlobalObject(
// We use the filename (or file path) as key. There should be only one getGlobalObject() usage per file. Thus the key should be unique, assuming the filename (or file path) is unique.
key, defaultValue) {
    const globalObjects = getGlobalObjects();
    const globalObject = (globalObjects[key] = globalObjects[key] || defaultValue);
    return globalObject;
}
/** Assert that the module is instantiated only once. */
function assertIsSingleModuleInstance(
// We use the filename (or file path) as key.
key) {
    const globalObjects = getGlobalObjects();
    assert(!(key in globalObjects));
}
function getGlobalObjects() {
    // @ts-ignore
    const globalObjects = (globalThis[projectKey] = globalThis[projectKey] || {});
    return globalObjects;
}
