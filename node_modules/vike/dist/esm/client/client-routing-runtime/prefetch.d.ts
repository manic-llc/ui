export { prefetch };
export { getPageContextPrefetched };
export { initLinkPrefetchHandlers };
export { populatePageContextPrefetchCache };
export { addLinkPrefetchHandlers };
export { addLinkPrefetchHandlers_watch };
export { addLinkPrefetchHandlers_unwatch };
import { type PageContextFromServerHooks, getPageContextFromServerHooks } from './getPageContextFromHooks.js';
import type { PageContextExports, PageFile } from '../../shared/getPageFiles.js';
import { type PageConfigRuntime } from '../../shared/page-configs/PageConfig.js';
type ResultPageContextFromServer = Awaited<ReturnType<typeof getPageContextFromServerHooks>>;
type PageContextForPrefetch = {
    urlOriginal: string;
    urlPathname: string;
    pageId: string;
    _urlRewrite: null;
    _pageFilesAll: PageFile[];
    _pageConfigs: PageConfigRuntime[];
};
declare function getPageContextPrefetched(pageContext: {
    urlPathname: string;
} & PageContextExports): null | PageContextFromServerHooks;
declare function populatePageContextPrefetchCache(pageContext: PageContextForPrefetch, result: ResultPageContextFromServer): void;
/**
 * Programmatically prefetch client assets.
 *
 * https://vike.dev/prefetch
 *
 * @param url - The URL of the page you want to prefetch.
 */
declare function prefetch(url: string, options_?: {
    pageContext?: boolean;
}): Promise<void>;
declare function addLinkPrefetchHandlers(): void;
declare function initLinkPrefetchHandlers(): void;
declare function addLinkPrefetchHandlers_watch(): void;
declare function addLinkPrefetchHandlers_unwatch(): void;
