"use strict";
// Mechanism to ensure code isn't loaded by production runtime
Object.defineProperty(exports, "__esModule", { value: true });
exports.vikeVitePluginLoadedInProductionError = void 0;
exports.assertIsNotProductionRuntime = assertIsNotProductionRuntime;
exports.markEnvAsViteDev = markEnvAsViteDev;
exports.markEnvAsVitePreview = markEnvAsVitePreview;
exports.markEnvAsVikePluginLoaded = markEnvAsVikePluginLoaded;
exports.assertEnv = assertEnv;
const assert_js_1 = require("./assert.js");
const assertIsNotBrowser_js_1 = require("./assertIsNotBrowser.js");
const debug_js_1 = require("./debug.js");
const getGlobalObject_js_1 = require("./getGlobalObject.js");
const isVitest_js_1 = require("./isVitest.js");
(0, assertIsNotBrowser_js_1.assertIsNotBrowser)();
const debug = (0, debug_js_1.createDebugger)('vike:setup');
const vikeVitePluginLoadedInProductionError = `Loading Vike's Vite plugin (the vike/plugin module) is prohibited in production.`;
exports.vikeVitePluginLoadedInProductionError = vikeVitePluginLoadedInProductionError;
const env = (0, getGlobalObject_js_1.getGlobalObject)('utils/assertIsNotProductionRuntime.ts', {});
// Called by Vike modules that want to ensure that they aren't loaded by the server runtime in production
function assertIsNotProductionRuntime() {
    if (debug.isActivated)
        debug('assertIsNotProductionRuntime()', new Error().stack);
    env.shouldNotBeProduction = true;
}
// Called by Vite hook configureServer()
function markEnvAsViteDev() {
    if (debug.isActivated)
        debug('markEnvAsViteDev()', new Error().stack);
    env.isViteDev = true;
}
// Called by Vite hook configurePreviewServer()
function markEnvAsVitePreview() {
    if (debug.isActivated)
        debug('markEnvAsVitePreview()', new Error().stack);
    env.isVitePreview = true;
}
// Called by ../node/plugin/index.ts
function markEnvAsVikePluginLoaded() {
    if (debug.isActivated)
        debug('markEnvAsVikePluginLoaded()', new Error().stack);
    env.isVikePluginLoaded = true;
}
// Called by ../node/runtime/index.ts
function assertEnv() {
    if (debug.isActivated)
        debug('assertEnv()', new Error().stack);
    if ((0, isVitest_js_1.isVitest)())
        return;
    const isProduction = !env.isViteDev && !env.isVitePreview;
    if (isProduction) {
        // Seems to be the only reliable way to assert that the user doesn't load Vike's Vite plugin in production. (The other assert() that uses process.env.NODE_ENV doesn't work if the user sets the process.env.NODE_ENV value later.)
        (0, assert_js_1.assertUsage)(!env.isVikePluginLoaded, vikeVitePluginLoadedInProductionError);
        // This assert() is the main goal of this file: it ensures assertIsNotProductionRuntime()
        (0, assert_js_1.assert)(!env.shouldNotBeProduction);
    }
    else {
        // This assert() is obious and boring
        (0, assert_js_1.assert)(env.shouldNotBeProduction);
        (0, assert_js_1.assert)(env.isVikePluginLoaded);
    }
}
