"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigDefinedAt = getConfigDefinedAt;
exports.getConfigDefinedAtOptional = getConfigDefinedAtOptional;
exports.getDefinedAtString = getDefinedAtString;
const utils_js_1 = require("../utils.js");
const picocolors_1 = __importDefault(require("@brillout/picocolors"));
const getExportPath_js_1 = require("./getExportPath.js");
function getConfigDefinedAt(sentenceBegin, configName, definedAtData) {
    return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;
}
function getConfigDefinedAtOptional(sentenceBegin, configName, definedAtData) {
    if (!definedAtData) {
        return `${begin(sentenceBegin, configName)} internally`;
    }
    else {
        return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;
    }
}
function begin(sentenceBegin, configName) {
    return `${sentenceBegin} ${picocolors_1.default.cyan(configName)} defined`;
}
function getDefinedAtString(definedAtData, configName) {
    let files;
    if ((0, utils_js_1.isArray)(definedAtData)) {
        files = definedAtData;
    }
    else {
        files = [definedAtData];
    }
    (0, utils_js_1.assert)(files.length >= 1);
    const definedAtString = files
        .map((source) => {
        const { filePathToShowToUser, fileExportPathToShowToUser } = source;
        let s = filePathToShowToUser;
        const exportPath = (0, getExportPath_js_1.getExportPath)(fileExportPathToShowToUser, configName);
        if (exportPath) {
            s = `${s} > ${picocolors_1.default.cyan(exportPath)}`;
        }
        return s;
    })
        .join(' / ');
    return definedAtString;
}
